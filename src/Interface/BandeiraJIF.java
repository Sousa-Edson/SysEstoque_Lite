/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import ModeloBeans.ModeloTabela;
import ConectaBanco.ConexaoBD;
import Interface.Principal;
import Sistema.ManipulaProtocolo;
//import Interface.Principal.Movimento.JIF_Movimento_Peq3;
import com.toedter.calendar.IDateEditor;
import java.awt.Color;
import static java.awt.Color.BLACK;
import static java.awt.Color.WHITE;
import java.awt.Component;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.event.FocusListener;
import java.beans.PropertyVetoException;
import java.math.BigDecimal;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableCellRenderer;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author David
 */
public class BandeiraJIF extends javax.swing.JInternalFrame {

    ConexaoBD conex = new ConexaoBD();
    Principal menu;
    ManipulaProtocolo prot = new ManipulaProtocolo();
//    JDialog_Consulta_Interna_visualizar_Detalhado telaDetalhe;
//    JIF_MovimentoA obj_Movimento;
//    JIF_Movimento_Peq3 obj_Movimento2 = new JIF_Movimento_Peq3();
//     JIF_Movimento obj_Movimento2 = new JIF_Movimento();

    String CLASS = "", CLASS_2 = "";
    String tipo_natureza = null;
    String chama_Os = "Novo";
    String Chama_Sistema;
    String obs = "";
    int selecao;
    int editar = 1;
    int data_box = 1;
    int atual = 1;
    String ObsProtocolo = null;
    String ReferenciaNota = null;
    String DataProtocolo = null;
    String NotaProtocolo = null;

    public BandeiraJIF() {
        initComponents();
        remover_Ico();
//        obj_Movimento = new JIF_Movimento_Peq2();
        data_fecha();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableListaProduto = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButton_Limpar = new javax.swing.JButton();
        jLabelData3 = new javax.swing.JLabel();
        jTextField_Buscar = new javax.swing.JTextField();
        jButton_Buscar = new javax.swing.JButton();
        jComboBoxSituacao = new javax.swing.JComboBox<>();
        jLabelData1 = new javax.swing.JLabel();
        jComboBoxOperacao = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton_Fechar = new javax.swing.JButton();
        jDateChooserData_INI = new com.toedter.calendar.JDateChooser();
        jDateChooserData_FIM = new com.toedter.calendar.JDateChooser();
        jRadioButtonEditar = new javax.swing.JRadioButton();
        jRadioButtonBuscaData = new javax.swing.JRadioButton();
        jRadioButtonPequeno = new javax.swing.JRadioButton();
        jRadioButtonGrande = new javax.swing.JRadioButton();
        jRadioButtonMedio = new javax.swing.JRadioButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jCheckBoxMenuItem_Observação = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem_Data = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem_Nota = new javax.swing.JCheckBoxMenuItem();

        setClosable(true);
        setMaximizable(true);
        setTitle("Consulta Bandeiras");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTableListaProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableListaProduto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTableListaProdutoFocusGained(evt);
            }
        });
        jTableListaProduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableListaProdutoMouseClicked(evt);
            }
        });
        jTableListaProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTableListaProdutoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableListaProdutoKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTableListaProduto);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton_Limpar.setText("Limpar");
        jButton_Limpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_LimparActionPerformed(evt);
            }
        });

        jLabelData3.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabelData3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelData3.setText("Descrição :");

        jTextField_Buscar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField_BuscarFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField_BuscarFocusLost(evt);
            }
        });
        jTextField_Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_BuscarActionPerformed(evt);
            }
        });
        jTextField_Buscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_BuscarKeyPressed(evt);
            }
        });

        jButton_Buscar.setText("Buscar");
        jButton_Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_BuscarActionPerformed(evt);
            }
        });
        jButton_Buscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton_BuscarKeyPressed(evt);
            }
        });

        jComboBoxSituacao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0-TODOS", "1-CALCULADO", "2-PRONTO", "3-AGUARDANDO", "4-ENVIADO", "5-DEVOLVIDO", "6-OUTRO" }));
        jComboBoxSituacao.setEnabled(false);
        jComboBoxSituacao.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxSituacaoItemStateChanged(evt);
            }
        });

        jLabelData1.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabelData1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelData1.setText("Situação:");

        jComboBoxOperacao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TODOS", "ENTRADA", "SAIDA", "AJUSTE" }));
        jComboBoxOperacao.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxOperacaoItemStateChanged(evt);
            }
        });
        jComboBoxOperacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxOperacaoActionPerformed(evt);
            }
        });
        jComboBoxOperacao.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jComboBoxOperacaoPropertyChange(evt);
            }
        });
        jComboBoxOperacao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBoxOperacaoKeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Operação:");

        jLabel1.setText("Data inicio :");

        jLabel3.setText("Data final :");

        jButton_Fechar.setForeground(new java.awt.Color(255, 0, 0));
        jButton_Fechar.setText("Fechar");
        jButton_Fechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_FecharActionPerformed(evt);
            }
        });

        jDateChooserData_INI.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooserData_INIPropertyChange(evt);
            }
        });

        jRadioButtonEditar.setText("Editar");

        jRadioButtonBuscaData.setText("Busca por data");
        jRadioButtonBuscaData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonBuscaDataActionPerformed(evt);
            }
        });

        jRadioButtonPequeno.setText("Pequeno");
        jRadioButtonPequeno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonPequenoActionPerformed(evt);
            }
        });

        jRadioButtonGrande.setText("Grande");
        jRadioButtonGrande.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonGrandeActionPerformed(evt);
            }
        });

        jRadioButtonMedio.setSelected(true);
        jRadioButtonMedio.setText("Medio");
        jRadioButtonMedio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMedioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton_Buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_Limpar, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_Fechar, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jRadioButtonEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButtonBuscaData)
                        .addGap(38, 38, 38)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDateChooserData_INI, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDateChooserData_FIM, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxOperacao, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBoxSituacao, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelData1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(118, 118, 118)
                                .addComponent(jLabelData3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButtonPequeno)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jRadioButtonGrande)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jRadioButtonMedio)
                                .addGap(177, 177, 177))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField_Buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 880, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(8, 8, 8))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelData3)
                            .addComponent(jRadioButtonPequeno)
                            .addComponent(jRadioButtonGrande)
                            .addComponent(jRadioButtonMedio))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_Buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabelData1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxOperacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jButton_Fechar)
                    .addComponent(jDateChooserData_INI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooserData_FIM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonEditar)
                    .addComponent(jRadioButtonBuscaData)
                    .addComponent(jButton_Limpar)
                    .addComponent(jButton_Buscar))
                .addGap(11, 11, 11))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton_Buscar, jButton_Fechar, jButton_Limpar, jDateChooserData_FIM, jDateChooserData_INI, jLabel1, jLabel3, jRadioButtonBuscaData, jRadioButtonEditar});

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jComboBoxOperacao, jComboBoxSituacao, jTextField_Buscar});

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenu4.setText("Modo Relatório");

        jCheckBoxMenuItem_Observação.setText("Observação");
        jMenu4.add(jCheckBoxMenuItem_Observação);

        jCheckBoxMenuItem_Data.setText("Data");
        jMenu4.add(jCheckBoxMenuItem_Data);

        jCheckBoxMenuItem_Nota.setText("Nota");
        jCheckBoxMenuItem_Nota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem_NotaActionPerformed(evt);
            }
        });
        jMenu4.add(jCheckBoxMenuItem_Nota);

        jMenu2.add(jMenu4);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTableListaProdutoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTableListaProdutoFocusGained
//        if (atual == 2) {
////            atualizarTabela_Busca();
//        } else {
//        }

    }//GEN-LAST:event_jTableListaProdutoFocusGained

    public void data_fecha() {
        jDateChooserData_INI.setEnabled(false);
        jDateChooserData_FIM.setEnabled(false);
        jLabel1.setEnabled(false);
        jLabel3.setEnabled(false);
    }

    public void data_abre() {
        jDateChooserData_INI.setEnabled(true);
        jDateChooserData_FIM.setEnabled(true);
        jLabel1.setEnabled(true);
        jLabel3.setEnabled(true);
    }

    private void jTableListaProdutoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableListaProdutoMouseClicked
        if (jCheckBoxMenuItem_Observação.isSelected()) {
            ObsProtocolo = "" + jTableListaProduto.getValueAt(jTableListaProduto.getSelectedRow(), 11); // verificar
        } else {
            ObsProtocolo = "";
        }
        if (jCheckBoxMenuItem_Data.isSelected()) {
            DataProtocolo = "" + jTableListaProduto.getValueAt(jTableListaProduto.getSelectedRow(), 7); // verificar
        } else {
            DataProtocolo = "";
        }
        if (jCheckBoxMenuItem_Nota.isSelected()) {
            NotaProtocolo = "" + jTableListaProduto.getValueAt(jTableListaProduto.getSelectedRow(), 9); // verificar
        } else {
            NotaProtocolo = "";
        }
        Chama_Sistema = "" + jTableListaProduto.getValueAt(jTableListaProduto.getSelectedRow(), 12);
        System.out.println(" Chama_Sistema ----------------------------   " + Chama_Sistema);
//        JOptionPane.showMessageDialog(null, "Chama_Sistema     " + Chama_Sistema);
        tipo_natureza = "" + jTableListaProduto.getValueAt(jTableListaProduto.getSelectedRow(), 10);
        chama_Os = "" + jTableListaProduto.getValueAt(jTableListaProduto.getSelectedRow(), 0);
        obs = "" + jTableListaProduto.getValueAt(jTableListaProduto.getSelectedRow(), 11);
        CorNaLinhaSelecionada();
        selecao = (int) jTableListaProduto.getValueAt(jTableListaProduto.getSelectedRow(), 0);
        chama_Os = String.valueOf(selecao);

        if (evt.getClickCount() == 2) {
            if (jRadioButtonEditar.isSelected()) {
                FormMovimento();
                atual = 2;
            } else {
                chamaRelatorio();
            }
        }
    }//GEN-LAST:event_jTableListaProdutoMouseClicked

    public void chamaRelatorio() {
        prot.RecebeMeusDados(DataProtocolo, NotaProtocolo, ObsProtocolo, ReferenciaNota);
        prot.CorrigeVerifica_Principal();
        prot.RecebeMInhaOs(chama_Os, menu.jLabel_Empresa.getText(), menu.jLabelNomeUsuario.getText(), "");
        prot.VerificaProtocolo();
        prot.RecebeMeuNumeroSitema(Chama_Sistema);
        if (jRadioButtonPequeno.isSelected()) {
            prot.chamaRelatorio_Bandeira_Pequeno();
        } else if (jRadioButtonGrande.isSelected()) {
            prot.chamaRelatorio_Bandeira_Grande();
        } else if (jRadioButtonMedio.isSelected()) {
            prot.chamaRelatorio_Bandeira_Medio();
        } else {
            prot.chamaRelatorio_Bandeira();
//            JOptionPane.showMessageDialog(null, "Selecione um tamanho !");
        }
    }

    public void FormMovimento() {
        conex.conexao();
        conex.executaSql("select id_nota from nota WHERE id_referencia ='" + chama_Os + "'");
        try {
            conex.rs.last();
            String texto = ((conex.rs.getString("id_nota")));
            Principal.jLabelCodigoTela.setText(texto);
            Principal.jLabelCodigoTela2.setText(Principal.jLabel_Gerador_De_Codigo.getText());
//                        MenuPrincipal.jLabel_Codigo_3.setText(Status_Prod);
            Principal.jButton1.setText("fcm1a");
            Principal.jButton1.requestFocus();
        } catch (SQLException ex) {
            System.out.println("SQLException ex " + ex);

        }
        conex.desconecta();
    }

    public void abre_Detalhes() {

        if (chama_Os == ("Novo") | chama_Os == (null)) {
        } else {
//            telaDetalhe = new JDialog_Consulta_Interna_visualizar_Detalhado(principal, rootPaneCheckingEnabled);
//            telaDetalhe.recebe_OS(chama_Os);
//            telaDetalhe.recebe_Tipo_Operacao(tipo_natureza);
//            telaDetalhe.recebe_Observacao(obs);
//            telaDetalhe.setVisible(true);
//            telaDetalhe.setResizable(false);
        }
    }

    public void evento_Chama_Situacao() {
        if (jComboBoxOperacao.getSelectedItem() == "SAIDA") {
            jComboBoxSituacao.setEnabled(true);
            jComboBoxSituacao.setSelectedItem("0-TODOS");
        } else {
            jComboBoxSituacao.setEnabled(false);
            jComboBoxSituacao.setSelectedItem("0-TODOS");
        }

    }


    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        atualizarTabela_Busca();
        jTextField_Buscar.requestFocus();
    }//GEN-LAST:event_formInternalFrameOpened

    private void jDateChooserData_FIMHierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jDateChooserData_FIMHierarchyChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jDateChooserData_FIMHierarchyChanged

    private void jDateChooserData_FIMAncestorMoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jDateChooserData_FIMAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jDateChooserData_FIMAncestorMoved

    private void jDateChooserData_FIMAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jDateChooserData_FIMAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jDateChooserData_FIMAncestorAdded

    private void jDateChooserData_FIMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jDateChooserData_FIMMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jDateChooserData_FIMMouseClicked

    private void jDateChooserData_FIMPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooserData_FIMPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jDateChooserData_FIMPropertyChange

    private void jDateChooserData_FIMVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_jDateChooserData_FIMVetoableChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jDateChooserData_FIMVetoableChange

    private void jDateChooserData_INIHierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jDateChooserData_INIHierarchyChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jDateChooserData_INIHierarchyChanged

    private void jDateChooserData_INIAncestorMoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jDateChooserData_INIAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jDateChooserData_INIAncestorMoved

    private void jDateChooserData_INIPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooserData_INIPropertyChange
//JOptionPane.showMessageDialog(rootPane, "propriedade");
        if (data_box == 2) {
            atualizarTabela_Busca();
        } else {
        }
    }//GEN-LAST:event_jDateChooserData_INIPropertyChange

    private void jDateChooserData_INIVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_jDateChooserData_INIVetoableChange

    }//GEN-LAST:event_jDateChooserData_INIVetoableChange

    private void jButton_LimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_LimparActionPerformed
        jTextField_Buscar.setText("");
//        jTextField_Documento.setText("");
//        jTextField_Fornecedor.setText("");
//        jTextField_Observacao.setText("");
        jComboBoxOperacao.setSelectedItem("TODOS");
        jComboBoxSituacao.setSelectedItem("0-TODOS");
        jDateChooserData_INI.setDate(null);
        jDateChooserData_FIM.setDate(null);
        jTextField_Buscar.requestFocus();
        atualizarTabela_Busca();
        jRadioButtonEditar.setSelected(false);
        data_fecha();
    }//GEN-LAST:event_jButton_LimparActionPerformed

    private void jTextField_BuscarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_BuscarFocusLost

    }//GEN-LAST:event_jTextField_BuscarFocusLost

    private void jTextField_BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_BuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_BuscarActionPerformed

    private void jTextField_BuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_BuscarKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
//            jTextField_Documento.requestFocus();
            atualizarTabela_Busca();
        }
        if (evt.getKeyCode() == evt.VK_ESCAPE) {
            fecha_form();
            this.dispose();
        }
    }//GEN-LAST:event_jTextField_BuscarKeyPressed

    private void jButton_BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_BuscarActionPerformed
        atualizarTabela_Busca();
    }//GEN-LAST:event_jButton_BuscarActionPerformed

    private void jButton_BuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton_BuscarKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            //            jButton_Buscar.requestFocus();
            atualizarTabela_Busca();
        }
    }//GEN-LAST:event_jButton_BuscarKeyPressed

    private void jComboBoxSituacaoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxSituacaoItemStateChanged
        atualizarTabela_Busca();
    }//GEN-LAST:event_jComboBoxSituacaoItemStateChanged

    private void jComboBoxOperacaoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxOperacaoItemStateChanged
        evento_Chama_Situacao();
        atualizarTabela_Busca();
    }//GEN-LAST:event_jComboBoxOperacaoItemStateChanged

    private void jComboBoxOperacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxOperacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxOperacaoActionPerformed

    private void jComboBoxOperacaoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jComboBoxOperacaoPropertyChange

    }//GEN-LAST:event_jComboBoxOperacaoPropertyChange

    private void jButton_FecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_FecharActionPerformed
        fecha_form();
        this.dispose();
    }//GEN-LAST:event_jButton_FecharActionPerformed

    public void fecha_form() {
//        menu.jButton_SysEstoque.requestFocusInWindow();
//        Component[] componentes = menu.Barra_Menu.getComponents(); // altere para o nome da variavel do seu painel
//        for (Component componente : componentes) {
//            componente.setEnabled(true);
//        }
//        Component[] componentes2 = this.getComponents(); // altere para o nome da variavel do seu painel
//        for (Component componente : componentes2) {
//            componente.setEnabled(true);
//        }
//        Component[] componentes4 = menu.jPanel4.getComponents(); // altere para o nome da variavel do seu painel
//        for (Component componente : componentes4) {
//            componente.setEnabled(true);
//        }
        atualizarTabela_Busca();
    }

    public void chama_Busca_Data() {
        Date INI = jDateChooserData_INI.getDate();
        Date FIM = jDateChooserData_FIM.getDate();
        JOptionPane.showMessageDialog(this, "chama data");
        atualizarTabela_Busca();

    }

    private void jComboBoxOperacaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxOperacaoKeyPressed
        if (evt.getKeyCode() == evt.VK_ESCAPE) {
            this.dispose();
        }
    }//GEN-LAST:event_jComboBoxOperacaoKeyPressed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        fecha_form();
    }//GEN-LAST:event_formInternalFrameClosing

    private void jTableListaProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableListaProdutoKeyPressed
        if (evt.getKeyCode() == evt.VK_ESCAPE) {
            fecha_form();
            this.dispose();
        }
    }//GEN-LAST:event_jTableListaProdutoKeyPressed

    private void jTableListaProdutoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableListaProdutoKeyReleased
        CorNaLinhaSelecionada();
    }//GEN-LAST:event_jTableListaProdutoKeyReleased

    private void jRadioButtonBuscaDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonBuscaDataActionPerformed
        if (jRadioButtonBuscaData.isSelected()) {
            data_abre();
        } else {
            data_fecha();
        }
    }//GEN-LAST:event_jRadioButtonBuscaDataActionPerformed

    private void jRadioButtonPequenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonPequenoActionPerformed
        if (jRadioButtonPequeno.isSelected()) {
            jRadioButtonMedio.setSelected(!true);
            jRadioButtonGrande.setSelected(!true);
        }
    }//GEN-LAST:event_jRadioButtonPequenoActionPerformed

    private void jRadioButtonGrandeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonGrandeActionPerformed
        if (jRadioButtonGrande.isSelected()) {
            jRadioButtonMedio.setSelected(!true);
            jRadioButtonPequeno.setSelected(!true);
        }
    }//GEN-LAST:event_jRadioButtonGrandeActionPerformed

    private void jRadioButtonMedioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMedioActionPerformed
        if (jRadioButtonMedio.isSelected()) {
            jRadioButtonGrande.setSelected(!true);
            jRadioButtonPequeno.setSelected(!true);
        }
    }//GEN-LAST:event_jRadioButtonMedioActionPerformed

    private void jCheckBoxMenuItem_NotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem_NotaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxMenuItem_NotaActionPerformed

    private void jTextField_BuscarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_BuscarFocusGained
        atualizarTabela_Busca();
    }//GEN-LAST:event_jTextField_BuscarFocusGained

    public void preencherTabela(String Sql) {
        ArrayList dados = new ArrayList();
        String[] colunas = new String[]{"OS", "Data", "Situação", "Cliente", "Descrição", "Quantidade",
            "Unidade", "Documento", "Observação", "IdNota"};
        Double qtd;
        String qtd_u;
        conex.conexao();
        conex.executaSql(Sql);

        try {
            conex.rs.first();
            do {
                ////conex.rs.getString("qtd_mov")
                qtd = (conex.rs.getDouble("qtd_prod"));
//                qtd_u = String.valueOf(qtd).replace(".", ",").replace(",0", "");
                qtd_u = String.valueOf(qtd).trim();

                String texto = (String.valueOf(conex.rs.getDouble("qtd_prod")));
                double comDecimal = (Double.parseDouble(texto));
                double semDecimal = (Double.parseDouble(texto));
                DecimalFormat df = new DecimalFormat("##.###");
                System.out.println(df.format(comDecimal));
                System.out.println(df.format(semDecimal));
//                String saida = (df.format(semDecimal));
                String saida;
                String descricao;
                String edicao = conex.rs.getString("edicao_prod");
//                String guia = conex.rs.getString("guia");
                String datahora = conex.rs.getString("nota_data") + " " + conex.rs.getString("nota_hora");
                String complemento = conex.rs.getString("complemento_mov"); // complemento_mov,destino_mov
                String destino = conex.rs.getString("destino_mov");

//                 MeuTotal = (conex_MeuTotal.rs.getString("qtd_prod"));
//            MeuValor = (conex_MeuTotal.rs.getString("valor_real"));
//            System.err.println("PreencherMeuTotal()                  INICIO " + MeuValor);
                Double num4 = Double.parseDouble(String.valueOf(qtd));
                BigDecimal dfa = new BigDecimal(num4);
                NumberFormat nfa = NumberFormat.getInstance();
                nfa.setMinimumFractionDigits(3);
                String FormatoReala = nfa.format(dfa);

                FormatoReala = FormatoReala.replace(",000", "");
                saida = FormatoReala;

                if (edicao.equals(null) | edicao.equals("") | edicao.equals(" ")) {
                    edicao = "";
                } else {
                    edicao = " N° " + edicao;
                }
//                if (guia.equals(null) | guia.equals("") | guia.equals(" ")) {
//                    guia = "";
//                } else {
//                    guia = " [ Guia N° " + guia + " ]";
//                }
                if (complemento.equals(null) | complemento.equals("") | complemento.equals(" ")) {
                    complemento = "";
                } else {
                    complemento = " " + complemento;
                }
                if (destino.equals(null) | destino.equals("") | destino.equals(" ")) {
                    destino = "";
                } else {
                    destino = " " + destino;
                }
                descricao = " " + conex.rs.getString("tipo_prod") + " " + conex.rs.getString("nome_prod") + edicao + complemento + destino;
                descricao = descricao.toUpperCase();
                String DocumentoNumero = conex.rs.getString("nota_documento") + " " + conex.rs.getString("nota_nota");
                String TesteDefinido = conex.rs.getString("nota_documento");
                if (TesteDefinido.equals("Não definido")) {
                    DocumentoNumero = "Não definido";
                    System.out.println("Não definido         " + descricao);
                } else {
                    DocumentoNumero = DocumentoNumero;
                    System.out.println("Definido            " + descricao);
                }
                dados.add(new Object[]{conex.rs.getInt("id_referencianota"), conex.rs.getString("nota_data"),
                    conex.rs.getString("nota_situacao"), conex.rs.getString("ecft_nome"),
                    descricao, saida, conex.rs.getString("desc_unidade"),
                    DocumentoNumero, conex.rs.getString("nota_observacao"), conex.rs.getString("id_nota")
                });
                //alterardo por edson//

            } while (conex.rs.next());
        } catch (SQLException ex) {
            System.out.println("SQLException ex " + ex);

        }
        ModeloTabela modelo = new ModeloTabela(dados, colunas);
//        modelo.setNumRows(0);
//        TableCellRenderer tcr = new Colorir();
//        TableColumn column = jTableListaProduto.getColumnModel().getColumn(1);
//        column.setCellRenderer(tcr);

        jTableListaProduto.setModel(modelo);

        jTableListaProduto.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTableListaProduto.getColumnModel().getColumn(0).setResizable(true);
//        jTableListaProduto.getColumnModel().getColumn(0).setCellRenderer(tcr);
        jTableListaProduto.getColumnModel().getColumn(1).setPreferredWidth(100);
        jTableListaProduto.getColumnModel().getColumn(1).setResizable(true);
        jTableListaProduto.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTableListaProduto.getColumnModel().getColumn(2).setResizable(true);
        jTableListaProduto.getColumnModel().getColumn(3).setPreferredWidth(120);
        jTableListaProduto.getColumnModel().getColumn(3).setResizable(true);
        jTableListaProduto.getColumnModel().getColumn(4).setPreferredWidth(420);
        jTableListaProduto.getColumnModel().getColumn(4).setResizable(true);
        jTableListaProduto.getColumnModel().getColumn(5).setPreferredWidth(80);
        jTableListaProduto.getColumnModel().getColumn(5).setResizable(true);
        jTableListaProduto.getColumnModel().getColumn(6).setPreferredWidth(80);
        jTableListaProduto.getColumnModel().getColumn(6).setResizable(true);
        jTableListaProduto.getColumnModel().getColumn(7).setPreferredWidth(120);
        jTableListaProduto.getColumnModel().getColumn(7).setResizable(true);
        jTableListaProduto.getColumnModel().getColumn(8).setPreferredWidth(180);
        jTableListaProduto.getColumnModel().getColumn(8).setResizable(true);
        jTableListaProduto.getColumnModel().getColumn(9).setPreferredWidth(80);
        jTableListaProduto.getColumnModel().getColumn(9).setResizable(true);
//        jTableListaProduto.getColumnModel().getColumn(10).setPreferredWidth(290);
//        jTableListaProduto.getColumnModel().getColumn(10).setResizable(true);
        jTableListaProduto.getTableHeader().setReorderingAllowed(false);
        jTableListaProduto.setAutoResizeMode(jTableListaProduto.AUTO_RESIZE_OFF);
        jTableListaProduto.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        conex.desconecta();

    }

    public void atualizarTabela_Busca() {
        System.out.println("atualizarTabela_Busca()          CERTO ");
        CorNaLinha();
        atual = 1;
        jTextField_Buscar.setText(jTextField_Buscar.getText().toUpperCase());
        String MinhaBusca = jTextField_Buscar.getText();
//        jTextField_Documento.setText(jTextField_Documento.getText().toUpperCase());
//        jTextField_Fornecedor.setText(jTextField_Fornecedor.getText().toUpperCase());
//        jTextField_Observacao.setText(jTextField_Observacao.getText().toUpperCase());

        Date INI = jDateChooserData_INI.getDate();
        Date FIM = jDateChooserData_FIM.getDate();

        String operacao = "";
        String situacao = "";

        if (jComboBoxOperacao.getSelectedItem() == "TODOS") {
            operacao = "";
            System.out.println("TODOS          TODOS ");
        } else {
            operacao = (String) jComboBoxOperacao.getSelectedItem();
            System.out.println("TODOS          ELSE ");
        }

        if (jComboBoxSituacao.getSelectedItem() == "0-TODOS") {
            situacao = "";
            System.out.println("0-TODOS          0-TODOS ");
        } else {
            situacao = (String) jComboBoxSituacao.getSelectedItem();
            System.out.println("0-TODOS          ELSE ");
        }
        if (INI == null | FIM == null) { /// sis_prod
            preencherTabela(""
                    + "SELECT \n"
                    + "\n"
                    + "id_nota, nota_documento, nota_nota, nota_data, nota_hora, nota_observacao, \n"
                    + "       nota_registro, nota_situacao, nota_chave, nota_total, nota_operacao, \n"
                    + "       nota_usu, id_referencianota, stnota, naturezaint, fornecedorint, \n"
                    + "       modalidade, transportadora, motorista, placa, uf, quantidade, \n"
                    + "       especie, numeracao, pesobruto, pesoliquido,\n"
                    + "\n"
                    + "       id_mov, id_prod_ent, data_mov, nota_mov, qtd_mov, qtd_prod, qtd_prod_ex, \n"
                    + "       qtd_calc, qtd_calc_ex, valor_real, valor_moeda, destino_mov, \n"
                    + "       complemento_mov, registro_mov, volume, usuario_mov, modo_mov, \n"
                    + "       total_mov, sistema_mov, stmovimento, stsaldo,\n"
                    + "\n"
                    + "       id_prod, sis_prod, ncm_prod, tipo_prod, nome_prod, edicao_prod, \n"
                    + "       cfop_prod, saldo_prod, valor_prod, estoque_prod, obs_prod, usu_prod, \n"
                    + "       data_reg, hora_reg, valor_prod_ex, stprod, idunid,\n"
                    + "\n"
                    + "        cl.ecft_id, cl.sis_ecft, cl.ecft_tipo, cl.ecft_nome, cl.ecft_cnpj, cl.ecft_inscricao, \n"
                    + "       cl.ecft_descricao, cl.ecft_telefone, cl.ecft_endereco, cl.ecft_no, cl.ecft_cep, \n"
                    + "       cl.ecft_complemento, cl.ecft_bairro, cl.ecft_cidade, cl.ecft_observacao, \n"
                    + "       cl.ecft_usuario, cl.ecft_registro, cl.stecft,\n"
                    + "\n"
                    + "        em.ecft_id, em.sis_ecft, em.ecft_tipo, em.ecft_nome,em.ecft_cnpj as cnpj_empresa, em.ecft_inscricao as incricao_empresa, \n"
                    + "       em.ecft_descricao as descricao_empresa, em.ecft_telefone as telefone_empresa, em.ecft_endereco as endereco_empresa, em.ecft_no as no_empresa, em.ecft_cep as cep_empresa, \n"
                    + "       em.ecft_complemento as complemento_empresa , em.ecft_bairro as bairro_empresa, em.ecft_cidade as cidade_empresa, em.ecft_observacao, \n"
                    + "       em.ecft_usuario, em.ecft_registro, em.stecft,\n"
                    + "\n"
                    + "        tr.ecft_id, tr.sis_ecft, tr.ecft_tipo, tr.ecft_nome, tr.ecft_cnpj as cnpj_transporte, tr.ecft_inscricao as inscricao_transporte, \n"
                    + "       tr.ecft_descricao as descricao_transporte, tr.ecft_telefone as telefone_transporte, tr.ecft_endereco as endereco_transporte, tr.ecft_no as no_transporte, tr.ecft_cep as cep_transporte, \n"
                    + "       tr.ecft_complemento as complemento_transporte, tr.ecft_bairro as bairro_transporte, tr.ecft_cidade as cidade_transporte, tr.ecft_observacao, \n"
                    + "       tr.ecft_usuario, tr.ecft_registro, tr.stecft,\n"
                    + "\n"
                    + "       id_unidade, id_referenciaunidade, sigla_unidade, desc_unidade, registro_unidade, usuario_unidade, stunid,\n"
                    + "\n"
                    + "       id_natureza, desc_natureza, tipo_natureza, usuario_natureza, registro_natureza, id_referencianatureza, stnat\n"
                    + "       \n"
                    + "       \n"
                    + "  FROM nota     \n"
                    + "inner join movprodutobase on nota_mov = id_referencianota\n"
                    + " \n"
                    + "  inner join produto on id_prod_ent = sis_prod\n"
                    + "  inner join ecft as cl on ecft_id=fornecedorint\n"
                    + "   inner join ecft  as em on em.ecft_id=empresaint\n"
                    + "    inner join ecft as tr on tr.ecft_id= motoristaint\n"
                    + "  inner join unidade on id_referenciaunidade=idunid\n"
                    + "  inner join natureza on id_natureza=naturezaint\n"
                    + "  \n"
                    + "\n"
                    + "  where stnota=1 and stmovimento=1 and stprod =1 and cl.stecft =1 and stunid =1 and stnat =1   order by datavariavel asc"
                    + ""
            );
            System.out.println("preencherTabela         (INI == null | FIM == null) ");
        } else {
            preencherTabela(""
                    + "select sis_prod,tipo_prod,nome_prod,guia,edicao_prod,nota_nota,nota_documento,nota_observacao,SUM(qtd_mov) AS qtd_mov,"
                    + "id_referencia,nota_fornecedor,sistema_mov,\n"
                    + "nota_situacao,nota_data ,un_prod,qtd_prod_ex,qtd_calc_ex,destino_mov,nota_operacao,complemento_mov,destino_mov\n"
                    + "From movprodutobase  Inner Join produto on id_prod_ent = sis_prod   inner join nota on id_referencia = nota_mov \n"
                    + " inner join palete on  mov_palete = sistema_mov  "
                    + "where nota_data!= '' and  (coalesce((id_referencia))||' '|| coalesce((sis_prod))||' '||coalesce((qtd_prod_ex))||' '|| coalesce(UPPER(tipo_prod))||' '|| coalesce(UPPER(nome_prod))||' '|| coalesce(UPPER(edicao_prod))\n"
                    + " ||' '|| coalesce(UPPER(edicao_prod)) ||'GUIA '|| coalesce(UPPER(guia)) ||' '|| coalesce(UPPER(nota_nota))||' '||\n"
                    + " coalesce(UPPER(nota_observacao))||' '|| coalesce(UPPER(nota_fornecedor))) "
                    + "ilike '%" + MinhaBusca + "%'  and nota_situacao ilike '%" + situacao + "%'and nota_operacao ilike '%" + operacao + "%' "
                    + "and status_mov like'%ATIVO%' and nota_status like'%ATIVO%' and status_prod like'%ATIVO%'"
                    + " and nota_data  !=''\n"
                    + "  and   CAST(nota_data as date ) > '" + INI + "' \n"
                    + "  and nota_data  !=''\n"
                    + " and   CAST(nota_data as date ) < '" + FIM + "' \n"
                    + " or  CAST(nota_data as date ) = '" + INI + "' \n"
                    + "  and nota_data  !='' and nota_status like'%ATIVO%' \n"
                    + "  or  CAST(nota_data as date ) = '" + FIM + "' \n"
                    + " and nota_data  !='' and nota_status like'%ATIVO%' "
                    //                    + "and  nota_data  !='' and  CAST(nota_data as date ) > '" + INI + "'and  nota_data  !='' and CAST(nota_data as date ) < '" + FIM + "' and  nota_data  !='' and nota_status like'%ATIVO%' "
                    //                    + "or CAST(nota_data as date ) = '" + INI + "' and  nota_data  !='' and nota_status like'%ATIVO%'   or CAST(nota_data as date ) = '" + FIM + "'   "
                    + " GROUP BY  produto.id_prod,nota.nota_nota,nota.nota_documento,nota.nota_observacao,nota.id_nota,\n"
                    + "  movprodutobase.qtd_prod_ex,movprodutobase.qtd_calc_ex ,movprodutobase.destino_mov,movprodutobase.nota_mov \n"
                    + " ,movprodutobase.complemento_mov,movprodutobase.destino_mov,movprodutobase.sistema_mov  order by nota_mov desc"
                    + ""
            );
            System.out.println("preencherTabela         (INI == OK | FIM == OK) ");
        }

    }

    public void CorNaLinha() {
        CLASS = "6-OUTRO";
        jTableListaProduto
                .setDefaultRenderer(Object.class,
                        new DefaultTableCellRenderer() {
                    @Override
                    public Component getTableCellRendererComponent(JTable table, Object value,
                            boolean isSelected, boolean hasFocus, int row, int column) {
                        JLabel label = (JLabel) super.getTableCellRendererComponent(table, value,
                                isSelected, hasFocus, row, column);
                        //******************************************************************************

                        Color c = Color.BLACK;
                        Object texto = table.getValueAt(row, 1);
                        Object texto2 = table.getValueAt(row, 1);
                        Object texto3 = table.getValueAt(row, 1);
                        Object texto4 = table.getValueAt(row, 1);
                        Object texto5 = table.getValueAt(row, 1);
                        Object texto6 = table.getValueAt(row, 1);
                        if (texto != null && CLASS.equals(texto.toString())) {
                            c = Color.RED;
                            label.setBackground(c);
                            jTableListaProduto.setSelectionForeground(WHITE);
                        } else if (texto2 != null && "1-CALCULADO".equals(texto.toString())) {
                            c = Color.YELLOW;
                            label.setBackground(c);
                            jTableListaProduto.setSelectionForeground(BLACK);
                        } else if (texto3 != null && "2-PRONTO".equals(texto.toString())) {
                            c = Color.CYAN;
                            label.setBackground(c);
                            jTableListaProduto.setSelectionForeground(BLACK);
                        } else if (texto4 != null && "3-AGUARDANDO".equals(texto.toString())) {
                            c = Color.GREEN;
                            label.setBackground(c);
                            jTableListaProduto.setSelectionForeground(WHITE);
                        } else if (texto5 != null && "4-ENVIADO".equals(texto.toString())) {
                            c = Color.BLUE;
                            label.setBackground(c);
                            jTableListaProduto.setSelectionForeground(BLACK);
                        } else if (texto5 != null && "5-DEVOLVIDO".equals(texto.toString())) {
                            c = Color.LIGHT_GRAY;
                            label.setBackground(c);
                            jTableListaProduto.setSelectionForeground(BLACK);
//                                                   
                        } else {
                            label.setBackground(c);
                            label.setBackground(java.awt.Color.WHITE);
                            jTableListaProduto.setSelectionForeground(BLACK);
                        }

                        //******************************************************************************
                        return label;
                    }

                });
    }

    public void CorNaLinhaSelecionada() {
        CLASS = "" + jTableListaProduto.getValueAt(jTableListaProduto.getSelectedRow(), 0);
        CLASS_2 = "" + jTableListaProduto.getValueAt(jTableListaProduto.getSelectedRow(), 12);
        System.out.println("CLASS_2     " + CLASS_2);
        jTableListaProduto
                .setDefaultRenderer(Object.class,
                        new DefaultTableCellRenderer() {
                    @Override
                    public Component getTableCellRendererComponent(JTable table, Object value,
                            boolean isSelected, boolean hasFocus, int row, int column) {
                        JLabel label = (JLabel) super.getTableCellRendererComponent(table, value,
                                isSelected, hasFocus, row, column);
                        //******************************************************************************

                        Color c = Color.BLACK;
                        Color c2 = Color.BLACK;
                        Object texto = table.getValueAt(row, 0);
                        Object texto2 = table.getValueAt(row, 12);

                        if (texto != null && CLASS.equals(texto.toString())) {
                            c = Color.blue;
                            label.setBackground(c);
//                            jTableListaProduto.setSelectionForeground(Color.red);
                            jTableListaProduto.setSelectionForeground(BLACK);
                            if (texto2 != null && CLASS_2.equals(texto2.toString())) {
                                c2 = Color.green;
                                label.setBackground(c2);
//                            jTableListaProduto.setSelectionForeground(Color.red);
                                jTableListaProduto.setSelectionForeground(BLACK);
                            } else {
//                                System.out.println("aqui else");
//                                JOptionPane.showMessageDialog(null, "aqui else");
                            }
                        } else {
                            label.setBackground(c);
                            label.setBackground(java.awt.Color.WHITE);
                            jTableListaProduto.setSelectionForeground(BLACK);
                        }

                        //******************************************************************************
                        return label;
                    }

                });
    }

    public void setPosicao() {
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);
    }

    public void remover_Ico() {
        this.setFrameIcon(null);

        // hack to remove system menu in Windows
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        Container north = (Container) ui.getNorthPane();
        north.remove(0);
        north.validate();
        north.repaint();
    }

    public void fecha_tela() {

        this.dispose();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Buscar;
    private javax.swing.JButton jButton_Fechar;
    private javax.swing.JButton jButton_Limpar;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem_Data;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem_Nota;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem_Observação;
    private javax.swing.JComboBox<String> jComboBoxOperacao;
    private javax.swing.JComboBox<String> jComboBoxSituacao;
    private com.toedter.calendar.JDateChooser jDateChooserData_FIM;
    private com.toedter.calendar.JDateChooser jDateChooserData_INI;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelData1;
    private javax.swing.JLabel jLabelData3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButtonBuscaData;
    private javax.swing.JRadioButton jRadioButtonEditar;
    private javax.swing.JRadioButton jRadioButtonGrande;
    private javax.swing.JRadioButton jRadioButtonMedio;
    private javax.swing.JRadioButton jRadioButtonPequeno;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTableListaProduto;
    public static javax.swing.JTextField jTextField_Buscar;
    // End of variables declaration//GEN-END:variables
}

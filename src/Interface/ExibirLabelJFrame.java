/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import ConectaBanco.ConexaoBD;
import ModeloBeans.ModeloTabela;
import java.awt.Color;
import java.awt.List;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author edson
 */
public class ExibirLabelJFrame extends javax.swing.JFrame {

    ConexaoBD conex = new ConexaoBD();
    String MinhaBusca, id_nota, nota_observacao, nota_data,nota_hora, sigla_unidade, qtd_calc_ex, qtd_prod_ex, ecft_nome, id_referencianota, descricao,
            StrgDocumento, VerificaOperacao, Operacao, edicao, complemento, destino, ecft_descricao,ecft_tipo,transporte;
//    ArrayList dados = new ArrayList();

    /**
     * Creates new form ExibirLabelJFrame
     */
    public ExibirLabelJFrame() {
        initComponents();
      //  RecebeDados("821");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabelExibir = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelExibir.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jScrollPane1.setBackground(new java.awt.Color(153, 255, 255));
        jScrollPane1.setBorder(null);
        jScrollPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jTable1.setBackground(new java.awt.Color(153, 255, 255));
        jTable1.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable1.setGridColor(new java.awt.Color(153, 255, 255));
        jScrollPane1.setViewportView(jTable1);

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(153, 255, 255));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Monospaced", 3, 13)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setBorder(null);
        jScrollPane2.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 774, Short.MAX_VALUE)
            .addComponent(jScrollPane2)
            .addComponent(jLabelExibir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelExibir, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExibirLabelJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExibirLabelJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExibirLabelJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExibirLabelJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExibirLabelJFrame().setVisible(true);
            }
        });
    }

    public void RecebeDados(String dados) {
//        dados = "816";
        jLabelExibir.setText(dados);
        MinhaBusca = dados;
        PreencherDados();
    }

    public void PreencherDados() {
        jScrollPane1.getViewport().setBackground(new Color(153, 255, 255));
        jScrollPane1.setBackground(new Color(153, 255, 255));

//jTable1.setBackground(Color.cyan);
        ArrayList dados = new ArrayList();
        String[] colunas = new String[]{""};
        conex.conexao();

        conex.executaSql("select id_nota,sis_prod,tipo_prod,nome_prod,edicao_prod,nota_nota,nota_documento,nota_observacao,SUM(qtd_mov) AS qtd_mov,\n"
                + "id_referencianota,ecft_nome,sistema_mov,\n"
                + "nota_situacao,nota_data ,nota_hora,sigla_unidade,qtd_prod_ex,qtd_calc_ex,destino_mov,nota_operacao,complemento_mov,destino_mov,"
                + "ecft_descricao,ecft_tipo,motorista,placa,uf\n"
                + "From movprodutobase  \n"
                + "Inner Join produto on id_prod_ent = sis_prod\n"
                + "   inner join nota on id_referencianota = nota_mov \n"
                + "   inner join ecft on ecft_id=fornecedorint\n"
                + "   inner join unidade on id_unidade = idunid\n"
                + "where   id_referencianota  = '" + MinhaBusca + "'  \n"
                + "  and stmovimento=1 and stnota=1 and stprod=1\n" 

                + "  GROUP BY  produto.id_prod,nota.nota_nota,nota.nota_documento,nota.nota_observacao,nota.id_nota,ecft.ecft_nome,unidade.sigla_unidade,\n"
                + "   movprodutobase.qtd_prod_ex,movprodutobase.qtd_calc_ex ,movprodutobase.destino_mov,movprodutobase.nota_mov \n"
                + "    ,movprodutobase.complemento_mov,movprodutobase.destino_mov,movprodutobase.sistema_mov,ecft.ecft_descricao,ecft.ecft_tipo  order by nota_mov desc"
                + "");
        try {
            conex.rs.first();
            do {
                transporte=conex.rs.getString("motorista")+" "+conex.rs.getString("placa")+" "+conex.rs.getString("uf");
                 if (transporte.equals(null) | transporte.equals("") | transporte.equals(" ")| transporte.equals("  ")| transporte.equals("   ")) {
                    transporte = "";
                } else {
                    transporte =transporte;
                }
                sigla_unidade = conex.rs.getString("sigla_unidade");
                edicao = conex.rs.getString("edicao_prod");
                complemento = conex.rs.getString("complemento_mov"); // complemento_mov,destino_mov
                destino = conex.rs.getString("destino_mov");
                System.err.println("VER AQUI DESTINO" + destino);
                if (edicao.equals(null) | edicao.equals("") | edicao.equals(" ")) {
                    edicao = "";
                } else {
                    edicao = " NÂ° " + edicao;
                }
                if (complemento.equals(null) | complemento.equals("") | complemento.equals(" ")) {
                    complemento = "";
                } else {
                    complemento = " " + complemento;
                }
                if (destino.equals(null) | destino.equals("") | destino.equals(" ")) {
                    destino = "";
                } else {
                    destino = " " + destino;
                }
                VerificaOperacao = conex.rs.getString("nota_operacao");
                Operacao = conex.rs.getString("nota_operacao") + " " + conex.rs.getString("nota_situacao");
                if (VerificaOperacao.equals("ENTRADA")) {
                    Operacao = "        ENTRADA";
                } else {
                    Operacao = Operacao.replace("-", " - ").replace("1", "").replace("2", "").replace("3", "").replace("4", "").replace("5", "");
                }
                StrgDocumento = conex.rs.getString("nota_documento");
                if (StrgDocumento.equals("NÃ£o definido")) {
                    StrgDocumento = StrgDocumento ;
                } else {
                    StrgDocumento = StrgDocumento + " " + conex.rs.getString("nota_nota");
                }
                System.out.println("VERIFICANDO A DATA " + conex.rs.getString("nota_data"));
                descricao = " " + conex.rs.getString("tipo_prod") + " " + conex.rs.getString("nome_prod") + edicao + complemento + destino;
                descricao = descricao.toUpperCase();
                id_referencianota = conex.rs.getString("id_referencianota");
                ecft_nome = conex.rs.getString("ecft_nome");
                qtd_prod_ex = conex.rs.getString("qtd_prod_ex");
                qtd_calc_ex = conex.rs.getString("qtd_calc_ex");
                sigla_unidade = conex.rs.getString("sigla_unidade"); /// aqui ver unidade
                nota_data = conex.rs.getString("nota_data");
                nota_hora= conex.rs.getString("nota_hora");
                nota_observacao = conex.rs.getString("nota_observacao");
                id_nota = conex.rs.getString("id_nota");
                ecft_tipo = conex.rs.getString("ecft_tipo");
                ecft_descricao = conex.rs.getString("ecft_descricao");
                System.out.println("descricao     -----  " + descricao);
//                dados.add(descricao);
                descricao = descricao + " | Qtd : " + qtd_prod_ex + " " + sigla_unidade;
                dados.add(new Object[]{descricao

                });
                //alterardo por edson//
                System.out.println("preencherTabela          CERTO " + dados);

            } while (conex.rs.next());
            System.out.println("preencherTabela          CERTO 2    -- " + dados);
            this.setTitle("##     Tela de informaÃ§Ãµes    ##");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Busque novamente" +ex);
            this.setTitle("Erro");
            System.out.println("preencherTabela          ERRO " + ex);
        }
        ModeloTabela modelo = new ModeloTabela(dados, colunas);
        jTable1.setModel(modelo);

        jTable1.getColumnModel().getColumn(0).setPreferredWidth(00);
        jTable1.getColumnModel().getColumn(0).setResizable(true);

        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.setAutoResizeMode(jTable1.AUTO_RESIZE_ALL_COLUMNS);
        jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        conex.desconecta();

        ManipulaExibir();
        DefaultTableCellRenderer headerRenderer = new DefaultTableCellRenderer();
        headerRenderer.setBackground(new Color(153, 255, 255));
        for (int i = 0; i < jTable1.getModel().getColumnCount(); i++) {
            jTable1.getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer);
        }

    }

    public void ManipulaExibir() {
//   jLabelExibir.setText("<html><b>CriaÃ§Ã£o</b> <br><font color=\"red\">do</font>  <i>arquivo</i> de <sup>configuraÃ§Ã£o</sup>  do acesso ao <sub>banco</sub> de <u>dados.</u>");
        jLabelExibir.setText("<html><b>" + ecft_tipo + " : " + ecft_descricao + "</b> <br><b><font color=\"red\">OperaÃ§Ã£o : " + Operacao + "</font></b>"
                + " <br> <b>Data : " + nota_data +" "+nota_hora+ " <br>&nbsp; &nbsp;<font color=\"green\">" + StrgDocumento + "</font> </b></br>"
                + "<br><b>" + transporte + "</b>"
                //                + "<ul>\n"
                //                + "<li>"+dados+"</li>\n"
                //                + "</ol>"
//                + "<br><b>ObservaÃ§Ã£o  : " + nota_observacao + "</b>"
                + " ");
        jTextArea1.setText(nota_observacao);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    public static javax.swing.JLabel jLabelExibir;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}

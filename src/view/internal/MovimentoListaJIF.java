/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.internal;

import Interface.Principal;
import ModeloBeans.ModeloTabela;
import ConectaBanco.ConexaoBD;
import Sistema.ManipulaProtocolo; 
import java.awt.Color; 
import java.awt.Component;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableCellRenderer;

//// jButton_Filtrar()
/**
 *
 * @author edson
 */
public class MovimentoListaJIF extends javax.swing.JInternalFrame {

//    CodigoChamadaFormulario ChamadaFormulario = new CodigoChamadaFormulario();
//    JFrameCadastroProtocolo CadastroProtocolo = new JFrameCadastroProtocolo();
//    MenuPrincipal Menu;
    ConexaoBD conex = new ConexaoBD();
//    ManipulaProtocolo prot = new ManipulaProtocolo();
    int id_referencia;
    String SisProd;

    int CliqueDuplo = 0;
    int selecao = 0;
    int selecao_id = 0;
    int selecaoB = 0;
    int selecaoc = 0;
    int selecaod = 0;
    int ModoBusca = 1;
    String CLASS = "";
    String ObsProtocolo = null;
    String DataProtocolo = null;
    String NotaProtocolo = null;
    ManipulaProtocolo prot = new ManipulaProtocolo();

    /**
     * Creates new form ListaProdutoJIF
     */
    public MovimentoListaJIF() {
        initComponents();
        remover_Ico();
//        ChamadaFormulario.ExecutaReferencia();
    }

    public void setPosicao() {
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);
    }

    public void remover_Ico() {
        this.setFrameIcon(null);

        // hack to remove system menu in Windows
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        Container north = (Container) ui.getNorthPane();
        north.remove(0);
        north.validate();
        north.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */ /// jbutton_Filtrar
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField_Busca = new javax.swing.JTextField();
        jButton_Filtrar = new javax.swing.JButton();
        jButtonNovo = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableListaProduto = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jRadioButtonOrdem = new javax.swing.JRadioButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jCheckBoxMenuItem_MostraTabela = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem_BuscaNumerica = new javax.swing.JCheckBoxMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jRadioButtonMenuItem_ModoAB = new javax.swing.JRadioButtonMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jCheckBoxMenuItem_Observação = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem_Data = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem_Nota = new javax.swing.JCheckBoxMenuItem();

        setBackground(new java.awt.Color(0, 255, 204));
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Lista Movimento");
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 255, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Busca :");

        jTextField_Busca.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField_BuscaFocusGained(evt);
            }
        });
        jTextField_Busca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_BuscaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_BuscaKeyReleased(evt);
            }
        });

        jButton_Filtrar.setText("Filtrar");
        jButton_Filtrar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButton_FiltrarFocusGained(evt);
            }
        });
        jButton_Filtrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_FiltrarActionPerformed(evt);
            }
        });

        jButtonNovo.setText("Novo");
        jButtonNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoActionPerformed(evt);
            }
        });

        jTableListaProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableListaProduto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTableListaProdutoFocusGained(evt);
            }
        });
        jTableListaProduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableListaProdutoMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableListaProdutoMouseReleased(evt);
            }
        });
        jTableListaProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTableListaProdutoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableListaProdutoKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTableListaProduto);

        jButton4.setText("Cancelar");
        jButton4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButton4FocusGained(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jRadioButtonOrdem.setSelected(true);
        jRadioButtonOrdem.setText("Ordem");
        jRadioButtonOrdem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonOrdemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_Busca, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_Filtrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonNovo)
                        .addGap(83, 83, 83)
                        .addComponent(jRadioButtonOrdem)
                        .addGap(0, 8, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton4, jButtonNovo, jButton_Filtrar});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField_Busca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_Filtrar)
                    .addComponent(jButtonNovo)
                    .addComponent(jButton4)
                    .addComponent(jRadioButtonOrdem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMenu1.setText("File");

        jMenuItem1.setText("Novo Protocolo");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Novo Movimento");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Editar");
        jMenu2.setContentAreaFilled(false);
        jMenu2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jCheckBoxMenuItem_MostraTabela.setText("Tabela mostra tudo");
        jCheckBoxMenuItem_MostraTabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem_MostraTabelaActionPerformed(evt);
            }
        });
        jMenu2.add(jCheckBoxMenuItem_MostraTabela);

        jCheckBoxMenuItem_BuscaNumerica.setText("Busca numerica");
        jCheckBoxMenuItem_BuscaNumerica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem_BuscaNumericaActionPerformed(evt);
            }
        });
        jMenu2.add(jCheckBoxMenuItem_BuscaNumerica);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Exibir");

        jRadioButtonMenuItem_ModoAB.setSelected(true);
        jRadioButtonMenuItem_ModoAB.setText("Modo A/B");
        jRadioButtonMenuItem_ModoAB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem_ModoABActionPerformed(evt);
            }
        });
        jMenu3.add(jRadioButtonMenuItem_ModoAB);

        jMenu4.setText("Modo Relatório");

        jCheckBoxMenuItem_Observação.setText("Observação");
        jMenu4.add(jCheckBoxMenuItem_Observação);

        jCheckBoxMenuItem_Data.setText("Data");
        jMenu4.add(jCheckBoxMenuItem_Data);

        jCheckBoxMenuItem_Nota.setText("Nota");
        jCheckBoxMenuItem_Nota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem_NotaActionPerformed(evt);
            }
        });
        jMenu4.add(jCheckBoxMenuItem_Nota);

        jMenu3.add(jMenu4);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_FiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_FiltrarActionPerformed
        jTextField_Busca.requestFocus();
        if (jTextField_Busca.getText().isEmpty() | jTextField_Busca.getText().equals(null) | jTextField_Busca.getText().equals("") | jTextField_Busca.getText().equals(" ")) {
            ModoBusca = 2;
            preencherTabela();
        } else {
            preencherTabela();
        }

        selecao = 0;
    }//GEN-LAST:event_jButton_FiltrarActionPerformed

    public void CorNaLinha() {
//        CLASS = "6-OUTRO";
        jTableListaProduto
                .setDefaultRenderer(Object.class,
                        new DefaultTableCellRenderer() {
                    @Override
                    public Component getTableCellRendererComponent(JTable table, Object value,
                            boolean isSelected, boolean hasFocus, int row, int column) {
                        JLabel label = (JLabel) super.getTableCellRendererComponent(table, value,
                                isSelected, hasFocus, row, column);
                        //******************************************************************************
                        if (jCheckBoxMenuItem_MostraTabela.isSelected()) {
                            Color c = Color.BLACK;
                            Object texto = table.getValueAt(row, 9);

                            if (texto != null && "EXCLUIDO".equals(texto.toString())) {
                                c = Color.RED;
                                label.setBackground(c);
                                jTableListaProduto.setSelectionForeground(Color.BLACK);
                            } else if (texto != null && "ALTERADO".equals(texto.toString())) {
                                c = Color.YELLOW;
                                label.setBackground(c);
                                jTableListaProduto.setSelectionForeground(Color.BLACK);
                            } else if (texto != null && "ATIVO".equals(texto.toString())) {
                                c = Color.GREEN;
                                label.setBackground(c);
                                jTableListaProduto.setSelectionForeground(Color.BLACK);
                            } else {
                                label.setBackground(null);
                            }
                        } else {
                            label.setBackground(null);

                        }

                        //******************************************************************************
                        return label;
                    }

                });
    }

    public void CorNaLinhaSelecionada2() {

        CLASS = "" + jTableListaProduto.getValueAt(jTableListaProduto.getSelectedRow(), 0);
        jTableListaProduto
                .setDefaultRenderer(Object.class,
                        new DefaultTableCellRenderer() {
                    @Override
                    public Component getTableCellRendererComponent(JTable table, Object value,
                            boolean isSelected, boolean hasFocus, int row, int column) {
                        JLabel label = (JLabel) super.getTableCellRendererComponent(table, value,
                                isSelected, hasFocus, row, column);
                        //******************************************************************************

                        Color c = Color.BLACK;
                        Object texto = table.getValueAt(row, 0);

                        if (texto != null && CLASS.equals(texto.toString())) {
                            c = Color.blue;
                            label.setBackground(c);
//                            jTableListaProduto.setSelectionForeground(Color.red);
                            jTableListaProduto.setSelectionForeground(Color.BLACK);
                        } else {
                            label.setBackground(c);
                            label.setBackground(java.awt.Color.WHITE);
                            jTableListaProduto.setSelectionForeground(Color.BLACK);
                        }

                        //******************************************************************************
                        return label;
                    }

                });
    }

    public void preencherTabelaAtualizar() {
    }

    public void preencherTabela() {
        selecaoc = 0;
        String TipoUsuario = Principal.jLabelTipoUsuario.getText();
        if (TipoUsuario == "Manutenção") {
            preencherTabela2();
        } else {
            preencherTabela3();
        }
    }

    public void preencherTabela2() {
        ArrayList dados = new ArrayList();
        String[] colunas = new String[]{"Status", "Id", "Natureza", "Documento", "  ", "Data", "Observação", "Registro", "Codigo"};
        String MostraTabela;
        if (jCheckBoxMenuItem_MostraTabela.isSelected()) {
            MostraTabela = "";

        } else {
            MostraTabela = "ATIVO";
        }

        conex.conexao();
        if (jRadioButtonOrdem.isSelected()) {
            if (ModoBusca == 2) {
                conex.executaSql2("select * from nota\n"
                        + "inner join ecft on fornecedorint=sis_ecft \n"
                        + "inner join natureza on naturezaint=id_referencianatureza\n"
                        + "where (coalesce((id_referenciaNota)) ||' '||coalesce(UPPER(desc_natureza))||' '||\n"
                        + "coalesce(UPPER(nota_operacao)) ||' '|| coalesce(UPPER(nota_documento))||' '|| coalesce((nota_nota))||' '||\n"
                        + "coalesce(UPPER(ecft_nome)) ||' '|| coalesce(UPPER(nota_situacao)) ||' '|| coalesce(UPPER(nota_observacao))||' '||\n"
                        + " coalesce(UPPER(nota_usu))  ||' '|| coalesce((nota_data))||' '|| coalesce((nota_registro)) )\n"
                        + "  ilike '%" + jTextField_Busca.getText() + "%' and stnat=1 and stecft =1 order by id_referenciaNota  desc\n"
                        + "  ");
                System.err.println("Tentando modo 1          Manutenção                 desc");//and stnota =1
                ModoBusca = 1;
            } else {
                conex.executaSql2(""
                        + "select  stnota,id_referenciaNota,nota_documento,nota_nota,desc_natureza,tipo_natureza,ecft_nome,id_nota,stnota,\n"
                        + "nota_data,nota_observacao,nota_registro,nota_usu,stmovimento\n"
                        + "from nota \n"
                        + " inner join movprodutobase on nota_mov=id_referenciaNota\n"
                        + " inner join produto on sis_prod=id_prod_ent\n"
                        + " inner join unidade on id_referenciaunidade=idunid\n"
                        + " inner join ecft on fornecedorint=sis_ecft \n"
                        + "inner join natureza on naturezaint=id_referencianatureza\n"
                        + " where (coalesce((id_referenciaNota)) ||' '||coalesce(UPPER(desc_natureza))||' '||\n"
                        + "coalesce(UPPER(nota_operacao)) ||' '|| coalesce(UPPER(nota_documento))||' '|| coalesce((nota_nota))||' '||\n"
                        + "coalesce(UPPER(ecft_nome)) ||' '|| coalesce(UPPER(nota_situacao)) ||' '|| coalesce(UPPER(nota_observacao))||' '||\n"
                        + " coalesce(UPPER(nota_usu))  ||' '|| coalesce((nota_data))||' '|| coalesce((nota_registro))||' '|| coalesce((id_prod_ent)) ||' '||coalesce((sis_prod))||' '||\n"
                        + " coalesce(UPPER(tipo_prod)) ||' '|| coalesce(UPPER(nome_prod)) ||' '||coalesce(UPPER(edicao_prod)) ||' '||coalesce(UPPER(desc_unidade))||' '||\n"
                        + " coalesce(UPPER(obs_prod))||' '|| coalesce(UPPER(usu_prod)) ||' '|| coalesce((data_reg)) )\n"
                        + " ilike '%" + jTextField_Busca.getText() + "%'and stmovimento=1 and stnat=1 and stunid=1 and stecft =1 "
                        + " group by nota.nota_documento,nota.nota_nota,nota.id_nota,nota.stnota ,movprodutobase.stmovimento,natureza.desc_natureza,natureza.tipo_natureza,ecft.ecft_nome\n"
                        + " order by id_referenciaNota desc\n"
                        + "                      "
                        + "");
                System.err.println("Tentando modo 2              Manutenção              desc");

            }
        } else {
            if (ModoBusca == 2) {
                conex.executaSql2("select * from nota\n"
                        + "inner join ecft on fornecedorint=sis_ecft \n"
                        + "inner join natureza on naturezaint=id_referencianatureza\n"
                        + "where (coalesce((id_referenciaNota)) ||' '||coalesce(UPPER(desc_natureza))||' '||\n"
                        + "coalesce(UPPER(nota_operacao)) ||' '|| coalesce(UPPER(nota_documento))||' '|| coalesce((nota_nota))||' '||\n"
                        + "coalesce(UPPER(ecft_nome)) ||' '|| coalesce(UPPER(nota_situacao)) ||' '|| coalesce(UPPER(nota_observacao))||' '||\n"
                        + " coalesce(UPPER(nota_usu))  ||' '|| coalesce((nota_data))||' '|| coalesce((nota_registro)) )\n"
                        + "  ilike '%" + jTextField_Busca.getText() + "%' and stnat=1 and stunid=1 and stecft =1 order by id_referenciaNota   asc\n"
                        + "  ");
                System.err.println("Tentando modo 1             Manutenção              asc");
                ModoBusca = 1;
            } else {
                conex.executaSql2(""
                        + "select  stnota,id_referenciaNota,nota_documento,nota_nota,desc_natureza,tipo_natureza,ecft_nome,id_nota,stnota,\n"
                        + "nota_data,nota_observacao,nota_registro,nota_usu,stmovimento\n"
                        + "from nota \n"
                        + " inner join movprodutobase on nota_mov=id_referenciaNota\n"
                        + " inner join produto on sis_prod=id_prod_ent\n"
                        + " inner join unidade on id_referenciaunidade=idunid\n"
                        + " inner join ecft on fornecedorint=sis_ecft \n"
                        + "inner join natureza on naturezaint=id_referencianatureza\n"
                        + " where (coalesce((id_referenciaNota)) ||' '||coalesce(UPPER(desc_natureza))||' '||\n"
                        + "coalesce(UPPER(nota_operacao)) ||' '|| coalesce(UPPER(nota_documento))||' '|| coalesce((nota_nota))||' '||\n"
                        + "coalesce(UPPER(ecft_nome)) ||' '|| coalesce(UPPER(nota_situacao)) ||' '|| coalesce(UPPER(nota_observacao))||' '||\n"
                        + " coalesce(UPPER(nota_usu))  ||' '|| coalesce((nota_data))||' '|| coalesce((nota_registro))||' '|| coalesce((id_prod_ent)) ||' '||coalesce((sis_prod))||' '||\n"
                        + " coalesce(UPPER(tipo_prod)) ||' '|| coalesce(UPPER(nome_prod)) ||' '||coalesce(UPPER(edicao_prod)) ||' '||coalesce(UPPER(desc_unidade))||' '||\n"
                        + " coalesce(UPPER(obs_prod))||' '|| coalesce(UPPER(usu_prod)) ||' '|| coalesce((data_reg)) )\n"
                        + " ilike '%" + jTextField_Busca.getText() + "%'and stmovimento=1 and stnat=1 and stunid=1 and stecft =1 "
                        + " group by nota.nota_documento,nota.nota_nota,nota.id_nota,nota.stnota ,movprodutobase.stmovimento,natureza.desc_natureza,natureza.tipo_natureza,ecft.ecft_nome\n"
                        + " order by id_referenciaNota asc\n"
                        + "                      "
                        + "");
                System.err.println("Tentando modo 2             Manutenção               asc");

            }
        }

        try {

            conex.rs.first();
            do {
                String nota_data = conex.rs.getString("nota_data");
                if (nota_data == null) {
                    nota_data = "";
                } else {
                    nota_data = nota_data;
                }
                String Documento1 = conex.rs.getString("nota_documento");
                String Documento = conex.rs.getString("nota_documento") + " " + conex.rs.getString("nota_nota");
                if (Documento1.equals("Não definido")) {
                    Documento = "Não definido";
                } else {
                    Documento = Documento;
                }
                String Cliente = conex.rs.getString("ecft_nome");
                String registro = conex.rs.getString("nota_usu") + " " + conex.rs.getString("nota_registro");
                int stint = conex.rs.getInt("stnota");
                String status;
                if (stint == 1) {
                    status = "ATIVO";
                } else if (stint == 2) {
                    status = "ALTERADO";
                } else if (stint == 3) {
                    status = "EXCLUIDO";
                } else {
                    status = "INDEFINIDO";
                }
                dados.add(new Object[]{status, conex.rs.getInt("id_referenciaNota"),
                    conex.rs.getString("desc_natureza"), Documento, Cliente,
                    nota_data, conex.rs.getString("nota_observacao"),
                    registro, conex.rs.getInt("id_nota")});
            } while (conex.rs.next());
            jButtonNovo.setBackground(Color.lightGray);//[0,255,204]new Color(240, 240, 240)
        } catch (SQLException ex) {
            System.err.println("erro" + ex);
            System.err.println("Erro tentar modo 1");
            if (ModoBusca == 1) {
                System.err.println("Erro tentar modo 1     /    erro" + ex);
                ModoBusca = 2;
            } else {
                System.err.println("Erro tentar modo 2     /    erro" + ex);
                ModoBusca = 1;
            }
            jButtonNovo.setBackground(Color.yellow);
//             preencherTabela();
        }
        ModeloTabela modelo = new ModeloTabela(dados, colunas);

        jTableListaProduto.setModel(modelo);
        jTableListaProduto.getColumnModel().getColumn(0).setPreferredWidth(80);
        jTableListaProduto.getColumnModel().getColumn(0).setResizable(true);
        jTableListaProduto.getColumnModel().getColumn(1).setPreferredWidth(60);
        jTableListaProduto.getColumnModel().getColumn(1).setResizable(true);
        jTableListaProduto.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTableListaProduto.getColumnModel().getColumn(2).setResizable(true);
        jTableListaProduto.getColumnModel().getColumn(3).setPreferredWidth(120);
        jTableListaProduto.getColumnModel().getColumn(3).setResizable(true);
        jTableListaProduto.getColumnModel().getColumn(4).setPreferredWidth(200);
        jTableListaProduto.getColumnModel().getColumn(4).setResizable(true);
        jTableListaProduto.getColumnModel().getColumn(5).setPreferredWidth(100);
        jTableListaProduto.getColumnModel().getColumn(5).setResizable(true);
        jTableListaProduto.getColumnModel().getColumn(6).setPreferredWidth(380);
        jTableListaProduto.getColumnModel().getColumn(6).setResizable(true);
        jTableListaProduto.getColumnModel().getColumn(7).setPreferredWidth(200);
        jTableListaProduto.getColumnModel().getColumn(7).setResizable(true);
        jTableListaProduto.getColumnModel().getColumn(8).setPreferredWidth(00);
        jTableListaProduto.getColumnModel().getColumn(8).setResizable(false);
        jTableListaProduto.getTableHeader().setReorderingAllowed(false);
        jTableListaProduto.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        jTableListaProduto.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        conex.desconecta();
    }

    public void preencherTabela3() {
        ArrayList dados = new ArrayList();
        String[] colunas = new String[]{"Id", "Natureza", "Documento", "  ", "Data", "Observação", "Registro", "Codigo"};
        String MostraTabela;
        if (jCheckBoxMenuItem_MostraTabela.isSelected()) {
            MostraTabela = "";
        } else {
            MostraTabela = "ATIVO";
        }
        conex.conexao();
        if (jRadioButtonOrdem.isSelected()) {
            if (ModoBusca == 2) {
                conex.executaSql2("select * from nota\n"
                        + "inner join ecft on fornecedorint=sis_ecft \n"
                        + "inner join natureza on naturezaint=id_referencianatureza\n"
                        + "where (coalesce((id_referenciaNota)) ||' '||coalesce(UPPER(desc_natureza))||' '||\n"
                        + "coalesce(UPPER(nota_operacao)) ||' '|| coalesce(UPPER(nota_documento))||' '|| coalesce((nota_nota))||' '||\n"
                        + "coalesce(UPPER(ecft_nome)) ||' '|| coalesce(UPPER(nota_situacao)) ||' '|| coalesce(UPPER(nota_observacao))||' '||\n"
                        + " coalesce(UPPER(nota_usu))  ||' '|| coalesce((nota_data))||' '|| coalesce((nota_registro)) )\n"
                        + "  ilike '%" + jTextField_Busca.getText() + "%' and stnota =1 and stnat=1 and stecft =1 order by id_referenciaNota  desc\n"
                        + "  ");
                System.err.println("Tentando modo 1                           desc");
                ModoBusca = 1;
            } else {
                conex.executaSql2(""
                        + "select  stnota,id_referenciaNota,nota_documento,nota_nota,desc_natureza,tipo_natureza,ecft_nome,id_nota,stnota,\n"
                        + "nota_data,nota_observacao,nota_registro,nota_usu,stmovimento\n"
                        + "from nota \n"
                        + " inner join movprodutobase on nota_mov=id_referenciaNota\n"
                        + " inner join produto on sis_prod=id_prod_ent\n"
                        + " inner join unidade on id_referenciaunidade=idunid\n"
                        + " inner join ecft on fornecedorint=sis_ecft \n"
                        + "inner join natureza on naturezaint=id_referencianatureza\n"
                        + " where (coalesce((id_referenciaNota)) ||' '||coalesce(UPPER(desc_natureza))||' '||\n"
                        + "coalesce(UPPER(nota_operacao)) ||' '|| coalesce(UPPER(nota_documento))||' '|| coalesce((nota_nota))||' '||\n"
                        + "coalesce(UPPER(ecft_nome)) ||' '|| coalesce(UPPER(nota_situacao)) ||' '|| coalesce(UPPER(nota_observacao))||' '||\n"
                        + " coalesce(UPPER(nota_usu))  ||' '|| coalesce((nota_data))||' '|| coalesce((nota_registro))||' '|| coalesce((id_prod_ent)) ||' '||coalesce((sis_prod))||' '||\n"
                        + " coalesce(UPPER(tipo_prod)) ||' '|| coalesce(UPPER(nome_prod)) ||' '||coalesce(UPPER(edicao_prod)) ||' '||coalesce(UPPER(desc_unidade))||' '||\n"
                        + " coalesce(UPPER(obs_prod))||' '|| coalesce(UPPER(usu_prod)) ||' '|| coalesce((data_reg)) )\n"
                        + " ilike '%" + jTextField_Busca.getText() + "%'and stmovimento=1 and stnota =1 and stnat=1 and stunid=1 and stecft =1 "
                        + " group by nota.nota_documento,nota.nota_nota,nota.id_nota,nota.stnota ,movprodutobase.stmovimento,natureza.desc_natureza,natureza.tipo_natureza,ecft.ecft_nome\n"
                        + " order by id_referenciaNota desc\n"
                        + "                      "
                        + "");
                System.err.println("Tentando modo 2                            desc");
            }
        } else {
            if (ModoBusca == 2) {
                conex.executaSql2("select * from nota\n"
                        + "inner join ecft on fornecedorint=sis_ecft \n"
                        + "inner join natureza on naturezaint=id_referencianatureza\n"
                        + "where (coalesce((id_referenciaNota)) ||' '||coalesce(UPPER(desc_natureza))||' '||\n"
                        + "coalesce(UPPER(nota_operacao)) ||' '|| coalesce(UPPER(nota_documento))||' '|| coalesce((nota_nota))||' '||\n"
                        + "coalesce(UPPER(ecft_nome)) ||' '|| coalesce(UPPER(nota_situacao)) ||' '|| coalesce(UPPER(nota_observacao))||' '||\n"
                        + " coalesce(UPPER(nota_usu))  ||' '|| coalesce((nota_data))||' '|| coalesce((nota_registro)) )\n"
                        + "  ilike '%" + jTextField_Busca.getText() + "%' and stnota =1  and stnat=1  and stecft =1 order by id_referenciaNota   asc\n"
                        + "  ");
                System.err.println("Tentando modo 1                           asc");
                ModoBusca = 1;
            } else {
                conex.executaSql2(""
                        + "select  stnota,id_referenciaNota,nota_documento,nota_nota,desc_natureza,tipo_natureza,ecft_nome,id_nota,stnota,\n"
                        + "nota_data,nota_observacao,nota_registro,nota_usu,stmovimento\n"
                        + "from nota \n"
                        + " inner join movprodutobase on nota_mov=id_referenciaNota\n"
                        + " inner join produto on sis_prod=id_prod_ent\n"
                        + " inner join unidade on id_referenciaunidade=idunid\n"
                        + " inner join ecft on fornecedorint=sis_ecft \n"
                        + "inner join natureza on naturezaint=id_referencianatureza\n"
                        + " where (coalesce((id_referenciaNota)) ||' '||coalesce(UPPER(desc_natureza))||' '||\n"
                        + "coalesce(UPPER(nota_operacao)) ||' '|| coalesce(UPPER(nota_documento))||' '|| coalesce((nota_nota))||' '||\n"
                        + "coalesce(UPPER(ecft_nome)) ||' '|| coalesce(UPPER(nota_situacao)) ||' '|| coalesce(UPPER(nota_observacao))||' '||\n"
                        + " coalesce(UPPER(nota_usu))  ||' '|| coalesce((nota_data))||' '|| coalesce((nota_registro))||' '|| coalesce((id_prod_ent)) ||' '||coalesce((sis_prod))||' '||\n"
                        + " coalesce(UPPER(tipo_prod)) ||' '|| coalesce(UPPER(nome_prod)) ||' '||coalesce(UPPER(edicao_prod)) ||' '||coalesce(UPPER(desc_unidade))||' '||\n"
                        + " coalesce(UPPER(obs_prod))||' '|| coalesce(UPPER(usu_prod)) ||' '|| coalesce((data_reg)) )\n"
                        + " ilike '%" + jTextField_Busca.getText() + "%'and stmovimento=1 and stnota =1 and stnat=1 and stunid=1 and stecft =1 "
                        + " group by nota.nota_documento,nota.nota_nota,nota.id_nota,nota.stnota ,movprodutobase.stmovimento,natureza.desc_natureza,natureza.tipo_natureza,ecft.ecft_nome\n"
                        + " order by id_referenciaNota asc\n"
                        + "                      "
                        + "");
                System.err.println("Tentando modo 2                            asc");//ilike '%" + jTextField_Busca.getText() + "%'and stmovimento=1 and stnota =1
            }
        }
        try {
            conex.rs.first();
            do {///// , , , 
                String nota_data = conex.rs.getString("nota_data");
                if (nota_data == null) {
                    nota_data = "";
                } else {
                    nota_data = nota_data;
                }
                String Documento1 = conex.rs.getString("nota_documento");
                String Documento = conex.rs.getString("nota_documento") + " " + conex.rs.getString("nota_nota");
                if (Documento1.equals("Não definido")) {
                    Documento = "Não definido";
                } else {
                    Documento = Documento;
                }
                String Cliente = conex.rs.getString("ecft_nome");
                String registro = conex.rs.getString("nota_usu") + " " + conex.rs.getString("nota_registro");
                int stint = conex.rs.getInt("stnota");
                String status;
                if (stint == 1) {
                    status = "ATIVO";
                } else if (stint == 2) {
                    status = "ALTERADO";
                } else if (stint == 3) {
                    status = "EXCLUIDO";
                } else {
                    status = "INDEFINIDO";
                }
                dados.add(new Object[]{conex.rs.getInt("id_referenciaNota"),
                    conex.rs.getString("desc_natureza"), Documento, Cliente,
                    nota_data, conex.rs.getString("nota_observacao"),
                    registro, conex.rs.getInt("id_nota")});
            } while (conex.rs.next());
            jButtonNovo.setBackground(Color.lightGray);//[0,255,204]new Color(240, 240, 240)
        } catch (SQLException ex) {

            if (ModoBusca == 1) {
                System.err.println("Erro tentar modo 1     /    erro" + ex);
                ModoBusca = 2;
            } else {
                System.err.println("Erro tentar modo 2     /    erro" + ex);
                ModoBusca = 1;
            }

            jButtonNovo.setBackground(Color.yellow);
        }
        ModeloTabela modelo = new ModeloTabela(dados, colunas);
        jTableListaProduto.setModel(modelo);
        jTableListaProduto.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTableListaProduto.getColumnModel().getColumn(0).setResizable(true);
        jTableListaProduto.getColumnModel().getColumn(1).setPreferredWidth(100);
        jTableListaProduto.getColumnModel().getColumn(1).setResizable(true);
        jTableListaProduto.getColumnModel().getColumn(2).setPreferredWidth(120);
        jTableListaProduto.getColumnModel().getColumn(2).setResizable(true);
        jTableListaProduto.getColumnModel().getColumn(3).setPreferredWidth(200);
        jTableListaProduto.getColumnModel().getColumn(3).setResizable(true);
        jTableListaProduto.getColumnModel().getColumn(4).setPreferredWidth(100);
        jTableListaProduto.getColumnModel().getColumn(4).setResizable(true);
        jTableListaProduto.getColumnModel().getColumn(5).setPreferredWidth(380);
        jTableListaProduto.getColumnModel().getColumn(5).setResizable(true);
        jTableListaProduto.getColumnModel().getColumn(6).setPreferredWidth(200);
        jTableListaProduto.getColumnModel().getColumn(6).setResizable(true);
        jTableListaProduto.getColumnModel().getColumn(7).setPreferredWidth(80);
        jTableListaProduto.getColumnModel().getColumn(7).setResizable(true);
        jTableListaProduto.getTableHeader().setReorderingAllowed(false);
        jTableListaProduto.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        jTableListaProduto.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        conex.desconecta();
    }

    public void CarregaUltimo() {
        conex.conexao();
        conex.executaSql2("SELECT  sis_ecft  FROM ecft where sis_ecft is not null and sis_ecft !=0 ");
        try {
            conex.rs.last();
            id_referencia = conex.rs.getInt("sis_ecft");
            id_referencia = id_referencia + 1;
        } catch (SQLException ex) {
            id_referencia = 1;
        }
        JOptionPane.showMessageDialog(rootPane, id_referencia);
        conex.desconecta();
    }

    private void jButtonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoActionPerformed
        Principal.jLabelCodigoTela2.setText("novo");
        Principal.jLabelCodigoTela.setText("MovimentoCadastroNovo");
        Principal.jButton1.doClick();
    }//GEN-LAST:event_jButtonNovoActionPerformed

    private void jButton_FiltrarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton_FiltrarFocusGained
        LiberaJanela();
    }//GEN-LAST:event_jButton_FiltrarFocusGained

    private void jButton4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton4FocusGained

    }//GEN-LAST:event_jButton4FocusGained

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        BotaoCancelar();
    }//GEN-LAST:event_jButton4ActionPerformed

    public void BotaoCancelar() {
        jTextField_Busca.setText(null);
        jTextField_Busca.requestFocus();
        ModoBusca = 2;
        preencherTabela();
    }

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        jTextField_Busca.requestFocus();
    }//GEN-LAST:event_formFocusGained

    private void jTextField_BuscaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_BuscaKeyPressed
        if (evt.getKeyCode() == evt.VK_ESCAPE) {
            this.setVisible(false);
        }
    }//GEN-LAST:event_jTextField_BuscaKeyPressed

    private void jTextField_BuscaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_BuscaFocusGained

    }//GEN-LAST:event_jTextField_BuscaFocusGained

    private void jTableListaProdutoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableListaProdutoMouseClicked
        String TipoUsuario = Principal.jLabelTipoUsuario.getText();

        if (TipoUsuario == "Manutenção") {
            selecao_id = (int) jTableListaProduto.getValueAt(jTableListaProduto.getSelectedRow(), 1);
        } else {
            selecao_id = (int) jTableListaProduto.getValueAt(jTableListaProduto.getSelectedRow(), 0);
        }
        if (evt.getButton() == MouseEvent.BUTTON3) {

//            JOptionPane.showMessageDialog(rootPane, "botao direito " + selecaoc);
            int resposta = 0;
            Object[] options = {"Relatório", "Protocolo", "Movimento"};
            resposta = JOptionPane.showOptionDialog(null, "O que deseja vizualizar ?", "Informação", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
            if (resposta == 0) {
                System.out.println("0");
//                selecao_id = (int) jTableListaProduto.getValueAt(jTableListaProduto.getSelectedRow(), 0);
                ChamaRelatorio();
            } else if (resposta == 1) {
                System.out.println("1");
                String MinhaIdNota;
                MinhaIdNota = String.valueOf(selecao_id);
                prot.RecebeMInhaOs(MinhaIdNota, "", "", "");
                System.out.println("selecao_id " + selecao_id);
                prot.chamaProtocoloPreto();
            } else if (resposta == 2) {
            } else {
                System.out.println("erro");
            }

        } else {

            if (TipoUsuario == "Manutenção") {
                selecaoc = (int) jTableListaProduto.getValueAt(jTableListaProduto.getSelectedRow(), 8);
                System.out.println("selecaoc " + selecaoc);
                if (evt.getClickCount() == 2) {
                    selecaod = (int) jTableListaProduto.getValueAt(jTableListaProduto.getSelectedRow(), 8);
                    System.out.println("selecaod " + selecaod);
                    Principal.jLabelCodigoTela2.setText(String.valueOf(selecaod));
                    Principal.jLabelCodigoTela.setText("MovimentoCadastroEditar");
                    Principal.jButton1.doClick();
                }
            } else {
                selecaoc = (int) jTableListaProduto.getValueAt(jTableListaProduto.getSelectedRow(), 7);
                System.out.println("selecaoc " + selecaoc);
                if (evt.getClickCount() == 2) {
                    selecaod = (int) jTableListaProduto.getValueAt(jTableListaProduto.getSelectedRow(), 7);
                    System.out.println("selecaod " + selecaod);
                    Principal.jLabelCodigoTela2.setText(String.valueOf(selecaod));
                    Principal.jLabelCodigoTela.setText("MovimentoCadastroEditar");
                    Principal.jButton1.doClick();
                }
            }

        }

    }//GEN-LAST:event_jTableListaProdutoMouseClicked

    public void ChamaRelatorio() {

        String MinhaIdNota;
        MinhaIdNota = String.valueOf(selecao_id);
        prot.RecebeMInhaOs(MinhaIdNota, "", "", "");
        prot.chamaRelatorio();
    }

    private void jTableListaProdutoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTableListaProdutoFocusGained
        try {
        } catch (Error err) {
            System.out.println("Interface.Movimento.ListaMovimentoJIF.jTableListaProdutoFocusGained()      errrrooooooo");
        }
    }//GEN-LAST:event_jTableListaProdutoFocusGained

    private void jRadioButtonOrdemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonOrdemActionPerformed
        jTextField_Busca.requestFocus();
        preencherTabela();
    }//GEN-LAST:event_jRadioButtonOrdemActionPerformed

    private void jCheckBoxMenuItem_MostraTabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem_MostraTabelaActionPerformed
        jTextField_Busca.requestFocus();
        preencherTabela();
    }//GEN-LAST:event_jCheckBoxMenuItem_MostraTabelaActionPerformed

    private void jCheckBoxMenuItem_BuscaNumericaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem_BuscaNumericaActionPerformed
        jTextField_Busca.requestFocus();
        preencherTabela();
    }//GEN-LAST:event_jCheckBoxMenuItem_BuscaNumericaActionPerformed

    private void jTableListaProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableListaProdutoKeyPressed

    }//GEN-LAST:event_jTableListaProdutoKeyPressed

    private void jTableListaProdutoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableListaProdutoKeyReleased
        String TipoUsuario = Principal.jLabelTipoUsuario.getText();
        if (TipoUsuario == "Manutenção") {
            if (evt.getKeyCode() == evt.VK_DOWN) {
                selecaoc = (int) jTableListaProduto.getValueAt(jTableListaProduto.getSelectedRow(), 8);
            }
            if (evt.getKeyCode() == evt.VK_UP) {
                selecaoc = (int) jTableListaProduto.getValueAt(jTableListaProduto.getSelectedRow(), 8);
            }
        } else {
            if (evt.getKeyCode() == evt.VK_DOWN) {
                selecaoc = (int) jTableListaProduto.getValueAt(jTableListaProduto.getSelectedRow(), 7);
            }
            if (evt.getKeyCode() == evt.VK_UP) {
                selecaoc = (int) jTableListaProduto.getValueAt(jTableListaProduto.getSelectedRow(), 7);
            }
        }
        System.out.println("selecaoc  -  down / up  = " + selecaoc);
    }//GEN-LAST:event_jTableListaProdutoKeyReleased

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed

    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jCheckBoxMenuItem_NotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem_NotaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxMenuItem_NotaActionPerformed

    private void jTextField_BuscaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_BuscaKeyReleased
//        ModoBusca = 2;
        if (evt.getKeyCode() == evt.VK_ENTER) {
            if (jTextField_Busca.getText().isEmpty() | jTextField_Busca.getText().equals(null) | jTextField_Busca.getText().equals("") | jTextField_Busca.getText().equals(" ")) {
                ModoBusca = 2;
                jButton_Filtrar.doClick();
            } else {
                jButton_Filtrar.doClick();
            }
        }
//        preencherTabela();
    }//GEN-LAST:event_jTextField_BuscaKeyReleased

    private void jTableListaProdutoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableListaProdutoMouseReleased
        if (selecaoc == 0) {
        } else {
            try {
                selecaoc = (int) jTableListaProduto.getValueAt(jTableListaProduto.getSelectedRow(), 7);
                System.out.println("MouseReleased  = " + selecaoc);
            } catch (Exception err) {
            }
        }
    }//GEN-LAST:event_jTableListaProdutoMouseReleased

    private void jRadioButtonMenuItem_ModoABActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem_ModoABActionPerformed

    }//GEN-LAST:event_jRadioButtonMenuItem_ModoABActionPerformed

    public void BloqueiaJanela() {
        Component[] componentes1 = jPanel1.getComponents(); // altere para o nome da variavel do seu painel
        for (Component componente : componentes1) {
            componente.setEnabled(false); // aqui por false
        }
    }

    public void LiberaJanela() {
        if (jButton_Filtrar.getText() == "Liberar") {
            this.setVisible(true);
            jButton_Filtrar.setText("jButton1");
            Component[] componentes1 = jPanel1.getComponents(); // altere para o nome da variavel do seu painel
            for (Component componente : componentes1) {
                componente.setEnabled(true); // aqui por false
            }
        } else {
            this.setVisible(true);
        }
    }

    public void Recebe(String num) {
        String ModoJanela = ((num));

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton jButton4;
    private javax.swing.JButton jButtonNovo;
    public static javax.swing.JButton jButton_Filtrar;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem_BuscaNumerica;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem_Data;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem_MostraTabela;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem_Nota;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem_Observação;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem_ModoAB;
    private javax.swing.JRadioButton jRadioButtonOrdem;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableListaProduto;
    public static javax.swing.JTextField jTextField_Busca;
    // End of variables declaration//GEN-END:variables
}

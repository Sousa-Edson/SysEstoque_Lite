/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/// jComboBox_Unidade
package view.internal;

import ConectaBanco.ConexaoBD;
import Interface.Principal;
import ModeloBeans.Beans_Movimento;
import ModeloBeans.Beans_Produto;
import ModeloBeans.ModeloTabela;
import ModeloDao.Dao_Movimento;
import ModeloDao.Dao_Produto;
import UTIL.ControleCores;
import controller.ProdutoController;
import java.awt.Color;
import static java.awt.Color.red;
import java.awt.Container;
import java.awt.Dimension;
import java.math.BigDecimal;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.plaf.basic.BasicInternalFrameUI;

/**
 *
 * @author edson
 */
public class ProdutoCadastroJIF extends javax.swing.JInternalFrame {

    Beans_Produto Bprod = new Beans_Produto();
    Dao_Produto Dprod = new Dao_Produto();
    Dao_Movimento Mdao = new Dao_Movimento();
    Beans_Movimento Mbeans = new Beans_Movimento();
    ConexaoBD conex = new ConexaoBD();
    ConexaoBD conex3 = new ConexaoBD();
    String UltimaId;
    int NumeroUltimaId;
    int un_prod;
    int IntModoValor = 0;
    int ComboFocu = 0;
    int id_referencia;

    ProdutoController produtoController;

    public ProdutoCadastroJIF() {
        initComponents();
        remover_Ico();
        PreencheUnidade();
        EscondeInsereSaldoInicio();

        pnPrincipal.setBackground(ControleCores.pegarCorPadrao());
        pnBotoes.setBackground(ControleCores.pegarCorPadrao());
        pnCampos.setBackground(ControleCores.pegarCorPadrao());

        produtoController = new ProdutoController();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnPrincipal = new javax.swing.JPanel();
        jLabel_Saldo_Prod2 = new javax.swing.JLabel();
        pnBotoes = new javax.swing.JPanel();
        jLabel_Id_Secundario2 = new javax.swing.JLabel();
        btnSalvar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jLabel_Sistema2 = new javax.swing.JLabel();
        btnExcluir = new javax.swing.JButton();
        pnCampos = new javax.swing.JPanel();
        txtipo = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtValor = new javax.swing.JTextField();
        txtEdicao = new javax.swing.JTextField();
        txtDesc = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel_Guia4 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jButtonNovaUnidade = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel_Valor2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtObs = new javax.swing.JTextArea();
        cbUnidade = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        spNcm = new javax.swing.JSpinner();
        spCfop = new javax.swing.JSpinner();
        spEstoqueMinimo = new javax.swing.JSpinner();
        cbUnidade_Int = new javax.swing.JComboBox<>();
        lblExibeInformacao = new javax.swing.JLabel();
        jTextFieldInsereSaldo = new javax.swing.JTextField();
        jButtonInsereSaldo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Cadastro de produto");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        pnPrincipal.setBackground(new java.awt.Color(0, 255, 204));
        pnPrincipal.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel_Saldo_Prod2.setText("  Saldo Produto : Zerado");
        jLabel_Saldo_Prod2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel_Saldo_Prod2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_Saldo_Prod2MouseClicked(evt);
            }
        });

        pnBotoes.setBackground(new java.awt.Color(0, 255, 204));
        pnBotoes.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel_Id_Secundario2.setText("novo");

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-salvar-24.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-cancelar-24.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jLabel_Sistema2.setBackground(new java.awt.Color(255, 0, 0));
        jLabel_Sistema2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_Sistema2.setText("Sistema");
        jLabel_Sistema2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnExcluir.setBackground(new java.awt.Color(255, 51, 0));
        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-excluir-24.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.setEnabled(false);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnBotoesLayout = new javax.swing.GroupLayout(pnBotoes);
        pnBotoes.setLayout(pnBotoesLayout);
        pnBotoesLayout.setHorizontalGroup(
            pnBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnBotoesLayout.createSequentialGroup()
                        .addGap(351, 351, 351)
                        .addComponent(jLabel_Id_Secundario2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_Sistema2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnBotoesLayout.createSequentialGroup()
                        .addComponent(btnSalvar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExcluir)))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        pnBotoesLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCancelar, btnExcluir, btnSalvar});

        pnBotoesLayout.setVerticalGroup(
            pnBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel_Sistema2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btnSalvar)
                .addComponent(btnCancelar)
                .addComponent(btnExcluir)
                .addComponent(jLabel_Id_Secundario2))
        );

        pnCampos.setBackground(new java.awt.Color(0, 255, 204));
        pnCampos.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtipo.setToolTipText("digite");
        txtipo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtipoFocusGained(evt);
            }
        });
        txtipo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtipoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtipoKeyReleased(evt);
            }
        });

        jLabel13.setText("Tipo:");

        txtValor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtValorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtValorFocusLost(evt);
            }
        });
        txtValor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtValorKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtValorKeyReleased(evt);
            }
        });

        txtEdicao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtEdicaoFocusGained(evt);
            }
        });
        txtEdicao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEdicaoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEdicaoKeyReleased(evt);
            }
        });

        txtDesc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDescFocusGained(evt);
            }
        });
        txtDesc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDescKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDescKeyReleased(evt);
            }
        });

        jLabel14.setText("Descrição :");

        jLabel_Guia4.setText("N°:");

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Estoque Min.");

        jButtonNovaUnidade.setText("+");
        jButtonNovaUnidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovaUnidadeActionPerformed(evt);
            }
        });

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Cfop");

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Ncm");

        jLabel_Valor2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_Valor2.setText("Valor");

        txtObs.setColumns(20);
        txtObs.setRows(5);
        txtObs.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtObsFocusGained(evt);
            }
        });
        txtObs.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtObsKeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(txtObs);

        cbUnidade.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbUnidadeItemStateChanged(evt);
            }
        });
        cbUnidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbUnidadeKeyPressed(evt);
            }
        });

        jLabel18.setText("Unidade:");

        spNcm.setModel(new javax.swing.SpinnerNumberModel(0, 0, 99999999, 1));

        spCfop.setModel(new javax.swing.SpinnerNumberModel(0, 0, 9999, 1));

        spEstoqueMinimo.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, null, 1.0d));

        javax.swing.GroupLayout pnCamposLayout = new javax.swing.GroupLayout(pnCampos);
        pnCampos.setLayout(pnCamposLayout);
        pnCamposLayout.setHorizontalGroup(
            pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCamposLayout.createSequentialGroup()
                .addGroup(pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnCamposLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(jLabel_Guia4, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtipo)
                            .addGroup(pnCamposLayout.createSequentialGroup()
                                .addComponent(txtEdicao, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtDesc)))
                    .addGroup(pnCamposLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnCamposLayout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnCamposLayout.createSequentialGroup()
                                .addGroup(pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel_Valor2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spNcm, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spCfop, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnCamposLayout.createSequentialGroup()
                                .addComponent(jButtonNovaUnidade)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbUnidade_Int, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(spEstoqueMinimo, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        pnCamposLayout.setVerticalGroup(
            pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCamposLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_Guia4)
                    .addComponent(cbUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(txtEdicao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonNovaUnidade)
                    .addComponent(cbUnidade_Int, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(jLabel_Valor2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spNcm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spCfop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spEstoqueMinimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addContainerGap())
        );

        lblExibeInformacao.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButtonInsereSaldo.setText("+");
        jButtonInsereSaldo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsereSaldoActionPerformed(evt);
            }
        });

        jLabel1.setText("Saldo :");

        javax.swing.GroupLayout pnPrincipalLayout = new javax.swing.GroupLayout(pnPrincipal);
        pnPrincipal.setLayout(pnPrincipalLayout);
        pnPrincipalLayout.setHorizontalGroup(
            pnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnCampos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnPrincipalLayout.createSequentialGroup()
                        .addGroup(pnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel_Saldo_Prod2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnPrincipalLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldInsereSaldo)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblExibeInformacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pnPrincipalLayout.createSequentialGroup()
                                .addComponent(jButtonInsereSaldo)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        pnPrincipalLayout.setVerticalGroup(
            pnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnCampos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_Saldo_Prod2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblExibeInformacao, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldInsereSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonInsereSaldo))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jMenu1.setText("Arquivo");

        jMenuItem1.setText("Repetir Ultimo");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Cópia");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Valor");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        this.setVisible(false);
    }//GEN-LAST:event_formInternalFrameClosing

    private void txtipoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtipoKeyPressed
//        this.excutaBotao(evt);
//        ContaCaracteresTipo();
        if (evt.getKeyCode() == evt.VK_ENTER) {
            txtDesc.requestFocus();
        }
        //        if (evt.getKeyCode() == evt.VK_UP) {
        //            jTextField_Desc.requestFocus();
        //        }
        if (evt.getKeyCode() == evt.VK_DOWN) {
            txtDesc.requestFocus();
        }
        //        if (evt.getKeyCode() == evt.VK_LEFT) {
        //            jTextField_Desc.requestFocus();
        //        }
        //        if (evt.getKeyCode() == evt.VK_RIGHT) {
        //            jComboBox_Unidade.requestFocus();
        //        }
    }//GEN-LAST:event_txtipoKeyPressed

    private void txtipoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtipoKeyReleased
        produtoController.contaCaracteres(txtipo, lblExibeInformacao, 30);
    }//GEN-LAST:event_txtipoKeyReleased

    private void txtDescKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescKeyPressed
//        ContaCaracteresDescricao();
        if (evt.getKeyCode() == evt.VK_ENTER) {
            txtEdicao.requestFocus();
        }
        if (evt.getKeyCode() == evt.VK_UP) {
            txtipo.requestFocus();
        }
        if (evt.getKeyCode() == evt.VK_DOWN) {
            txtEdicao.requestFocus();
        }
        //        if (evt.getKeyCode() == evt.VK_LEFT) {
        //            jTextField_Desc.requestFocus();
        //        }
        //        if (evt.getKeyCode() == evt.VK_RIGHT) {
        //            jComboBox_Unidade.requestFocus();
    }//GEN-LAST:event_txtDescKeyPressed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        SalvaTemp();
        LimpaCampos();
        BuscaUltimaId();
        Principal.jLabelCodigoTela.setText("AtualizaProdutoLista");
        Principal.jButton1.doClick();
        String Id_Secundario2 = jLabel_Id_Secundario2.getText();
        if (Id_Secundario2 == "novo") {
        } else {
            Principal.jLabelCodigoTela.setText("FechaCadastroProdutoEditar");
            Principal.jButton1.doClick();
        }

    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        produtoController.limparCampos(this);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void cbUnidadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbUnidadeKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            txtValor.requestFocus();
        }
        if (evt.getKeyCode() == evt.VK_F5) {
            PreencheUnidade();
        }
        if (evt.getKeyCode() == evt.VK_F2) {
            Principal.jLabelCodigoTela.setText("CadastroUnidade");
            Principal.jButton1.doClick();
        }
        //        if (evt.getKeyCode() == evt.VK_UP) {
        //            jTextField_Desc.requestFocus();
        //        }
        //        if (evt.getKeyCode() == evt.VK_DOWN) {
        //            jTextField_EstoqueMin.requestFocus();
        //        }
        if (evt.getKeyCode() == evt.VK_LEFT) {
            txtEdicao.requestFocus();
        }
        //        if (evt.getKeyCode() == evt.VK_RIGHT) {
        //            jComboBox_Unidade.requestFocus();
        //        }
    }//GEN-LAST:event_cbUnidadeKeyPressed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        BotaoExcluir();
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void txtValorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtValorFocusLost
       produtoController.manipulaValor(this);
    }//GEN-LAST:event_txtValorFocusLost

    private void txtValorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            spNcm.requestFocus();
        }
        if (evt.getKeyCode() == evt.VK_UP) {
            txtEdicao.requestFocus();
        }
        if (evt.getKeyCode() == evt.VK_DOWN) {
            txtObs.requestFocus();
        }
        //        if (evt.getKeyCode() == evt.VK_LEFT) {
        //            jTextField_Desc.requestFocus();
        //        }
        if (evt.getKeyCode() == evt.VK_RIGHT) {
            spNcm.requestFocus();
        }
    }//GEN-LAST:event_txtValorKeyPressed

    private void txtEdicaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEdicaoKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            cbUnidade.requestFocus();
        }
        if (evt.getKeyCode() == evt.VK_UP) {
            txtDesc.requestFocus();
        }
        if (evt.getKeyCode() == evt.VK_DOWN) {
            txtValor.requestFocus();
        }
        if (evt.getKeyCode() == evt.VK_LEFT) {
            txtDesc.requestFocus();
        }
        if (evt.getKeyCode() == evt.VK_RIGHT) {
            cbUnidade.requestFocus();
        }

        //       VerificaEdicaoNumero();
    }//GEN-LAST:event_txtEdicaoKeyPressed

    private void txtEdicaoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEdicaoKeyReleased
        produtoController.contaCaracteres(txtEdicao, lblExibeInformacao, 30);
    }//GEN-LAST:event_txtEdicaoKeyReleased

    private void jButtonNovaUnidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovaUnidadeActionPerformed
        Principal.jLabelCodigoTela.setText("CadastroUnidade");
        Principal.jButton1.doClick();
    }//GEN-LAST:event_jButtonNovaUnidadeActionPerformed

    private void txtDescKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescKeyReleased
        produtoController.contaCaracteres(txtDesc, lblExibeInformacao, 50);
    }//GEN-LAST:event_txtDescKeyReleased

    private void txtipoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtipoFocusGained
        produtoController.contaCaracteres(txtipo, lblExibeInformacao, 30);
    }//GEN-LAST:event_txtipoFocusGained

    private void txtDescFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescFocusGained
        produtoController.contaCaracteres(txtDesc, lblExibeInformacao, 50);
    }//GEN-LAST:event_txtDescFocusGained

    private void txtEdicaoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEdicaoFocusGained
        produtoController.contaCaracteres(txtEdicao, lblExibeInformacao, 30);
    }//GEN-LAST:event_txtEdicaoFocusGained

    private void txtValorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtValorFocusGained
        produtoController.contaCaracteres(txtValor, lblExibeInformacao, 30);
    }//GEN-LAST:event_txtValorFocusGained

    private void txtValorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorKeyReleased
        produtoController.contaCaracteres(txtValor, lblExibeInformacao, 30);
    }//GEN-LAST:event_txtValorKeyReleased

    private void txtObsFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtObsFocusGained
        produtoController.contaCaracteres(txtObs, lblExibeInformacao, 150);
    }//GEN-LAST:event_txtObsFocusGained

    private void txtObsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtObsKeyReleased
        produtoController.contaCaracteres(txtObs, lblExibeInformacao, 150);
    }//GEN-LAST:event_txtObsKeyReleased

    private void jLabel_Saldo_Prod2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_Saldo_Prod2MouseClicked
        EscondeInsereSaldo();
    }//GEN-LAST:event_jLabel_Saldo_Prod2MouseClicked

    private void jButtonInsereSaldoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsereSaldoActionPerformed
        AlteraSaldo();
        CarregaDadosDaTabela();
    }//GEN-LAST:event_jButtonInsereSaldoActionPerformed

    private void cbUnidadeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbUnidadeItemStateChanged
        String selecao = (String) cbUnidade.getSelectedItem();
        if (selecao == null) {
        } else {
            if (ComboFocu == 0) {
            } else {
                cbUnidade_Int.setSelectedIndex(cbUnidade.getSelectedIndex());
                System.out.println("==========  String " + cbUnidade.getSelectedItem());
                System.out.println("==========  Int " + cbUnidade.getSelectedItem());
                System.out.println("==========  Int " + cbUnidade_Int.getSelectedIndex());
            }
        }
    }//GEN-LAST:event_cbUnidadeItemStateChanged

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed

    }//GEN-LAST:event_jMenu2ActionPerformed

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        System.out.println("Interface.ProdCadastroJIF.jMenu2ActionPerformed()");
//        ManipulaModoValor();
//        ManipulaValor();
        txtValor.requestFocus();
    }//GEN-LAST:event_jMenu2MouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        CarregaUltimoIdSecundaria();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    public void CarregaUltimoIdSecundaria() {
        String IdSecundaria = null;
        conex.conexao();
        conex.executaSql2("SELECT  id_prod  FROM produto where sis_prod is not null and sis_prod !=0 order by sis_prod asc ");
        try {
            conex.rs.last();
            IdSecundaria = conex.rs.getString("id_prod");
//            id_referencia = id_referencia + 1;
        } catch (SQLException ex) {
            IdSecundaria = "novo";
        }
        conex.desconecta();
        jLabel_Id_Secundario2.setText(String.valueOf(IdSecundaria));
        CarregaDadosDaTabela();
        CarregaUltimo();
        jLabel_Id_Secundario2.setText("novo");
    }

    public void CarregaUltimo() {
        conex.conexao();
        conex.executaSql2("SELECT  sis_prod  FROM produto where sis_prod is not null and sis_prod !=0 order by sis_prod asc ");
        try {
            conex.rs.last();
            id_referencia = conex.rs.getInt("sis_prod");
//            JOptionPane.showMessageDialog(rootPane, id_referencia);
            id_referencia = id_referencia + 1;
//            JOptionPane.showMessageDialog(rootPane, id_referencia);
        } catch (SQLException ex) {
//            Logger.getLogger(UnidadeJIF.class.getName()).log(Level.SEVERE, null, ex);
            id_referencia = 1;
        }
//        JOptionPane.showMessageDialog(rootPane, id_referencia);
        conex.desconecta();
        jLabel_Sistema2.setText(String.valueOf(id_referencia));
    }

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        int resposta = 0;
        resposta = JOptionPane.showConfirmDialog(rootPane, "Deseja realmente fazer uma cópia ? ");
        if (resposta == JOptionPane.YES_OPTION) {
            CarregaUltimo();
            jLabel_Id_Secundario2.setText("novo");
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    public void AlteraSaldo() {
        try {
            String InsereSaldo = jTextFieldInsereSaldo.getText();
            int IdSecundario = Integer.parseInt(jLabel_Id_Secundario2.getText());
            InsereSaldo = InsereSaldo.replace(".", "").replace(",", ".");
            Bprod.setSaldo_prod(Double.parseDouble(InsereSaldo));
            Bprod.setId_prod(IdSecundario);
            Dprod.AlteraSaldo(Bprod);

            Mbeans.setId_prod_ent(IdSecundario);
            Mdao.AlterarStatusSaldo_MovProdutoBase_Produto(Mbeans);
            String MinhaQtd = (jTextFieldInsereSaldo.getText());
            MinhaQtd = MinhaQtd.replace(",", ".");
            Mbeans.setQtd_prod(Double.parseDouble(MinhaQtd));
            Mbeans.setQtd_prod_ex((MinhaQtd));
            Mbeans.setQtd_calc(Double.parseDouble(MinhaQtd));
            Mbeans.setQtd_mov(Double.parseDouble(MinhaQtd));
            Mbeans.setQtd_calc_ex(MinhaQtd);
            Mbeans.setStsaldo(1);
            Mbeans.setStatus_mov(1);
            Mdao.SalvarQuantidadeProduto_MovProdutoBase(Mbeans);
        } catch (Error ex) {
            JOptionPane.showMessageDialog(rootPane, "erro " + ex);
        }
    }

    public void EventoLimpar() {
//        jTextFieldBusca.setText("");
//        jTextFieldBusca.requestFocus();
        ArrayList dados = new ArrayList();
        String[] colunas = new String[]{};
        ModeloTabela modelo = new ModeloTabela(dados, colunas);
//        jTable_Produto.setModel(modelo);

    }

    public void setPosicao() {
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);
    }

    public void remover_Ico() {
        this.setFrameIcon(null);

        // hack to remove system menu in Windows
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        Container north = (Container) ui.getNorthPane();
        north.remove(0);
        north.validate();
        north.repaint();
    }

    public void PreencheUnidade() {
        conex.conexao();
        conex.executaSql2("SELECT  sigla_unidade, desc_unidade,id_referenciaunidade FROM unidade  where stunid =1   order by id_referenciaunidade asc ");
        try {
            conex.rs.first();
            cbUnidade.removeAllItems();
            cbUnidade_Int.removeAllItems();

            do {
                String unidade = (conex.rs.getString("sigla_unidade"));
                cbUnidade.addItem(unidade);
                cbUnidade_Int.addItem(conex.rs.getString("id_referenciaunidade"));
            } while (conex.rs.next());
            ComboFocu = 1;
        } catch (SQLException ex) {
            Logger.getLogger(ProdutoCadastroJIF.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Interface.ProdCadastroJIF.PreencheUnidade()  ERRO    ------------------- " + ex);
            cbUnidade.addItem("UN");
            cbUnidade.setSelectedItem("UN");
            cbUnidade_Int.addItem("0");
            cbUnidade_Int.setSelectedItem("0");
        }
        conex.desconecta();
        cbUnidade_Int.setVisible(true);
    }

    public void VerificaCor() {
        Color cor = txtipo.getBackground();
        if (cor == red) {
            JOptionPane.showMessageDialog(rootPane, "Verifique");
            System.out.println("cor " + cor);
        } else {
            System.out.println("cor " + cor);
            SalvaTemp();
        }
    }

    public void LimpaCampos() {
        this.setTitle("Cadastro Produto");
        // jLabel_Valor.setText("Valor");
        txtipo.setText(null);
        txtipo.requestFocus();
        txtDesc.setText(null);
        txtEdicao.setText(null);
        txtValor.setText(null);
        spNcm.setValue(0);
        spCfop.setValue(0);
        spEstoqueMinimo.setValue(0);
        txtObs.setText(null);
        lblExibeInformacao.setText(null);
        jLabel_Saldo_Prod2.setText("  Saldo Produto : Zerado");
        btnExcluir.setEnabled(false);
        cbUnidade.setSelectedItem("UN");
    }

    public void VerificaNumeroNcm() {
        String s;
//        s = jTextField_Ncm.getText().replace(" ", "");
//        if (s.matches("^[0-9.]*$")) {
//            jTextField_Ncm.setBackground(null);
//        } else {
//            jTextField_Ncm.setText(null);
//            jTextField_Ncm.setBackground(Color.RED);
//        }
    }

    public void VerificaNumeroCfop() {
        String s;
//        s = jSpinner2.getText().replace(" ", "");
//        if (s.matches("^[0-9.]*$")) {
//            jSpinner2.setBackground(null);
//        } else {
//            jSpinner2.setText(null);
//            jSpinner2.setBackground(Color.RED);
//        }
    }

    public void RecebeIdProduto(String id) {
        jLabel_Id_Secundario2.setText(id);
        if (id == "novo" | id.equals("novo")) {
//            jLabel_Sistema2.setText(id);
//            JOptionPane.showMessageDialog(rootPane, "qqqqqqqqqqqqqqqqq");
            LimpaCampos();
            BuscaUltimaId();
        } else {
            CarregaDadosDaTabela();
        }
    }

    public void CarregaDadosDaTabela() {
        btnExcluir.setEnabled(true);
        conex.conexao();
        conex.executaSql2("  select * from produto inner join unidade on  idunid=id_referenciaunidade  where id_prod = '" + jLabel_Id_Secundario2.getText() + "' order by id_prod  desc");
        try {
            conex.rs.first();
            cbUnidade.setSelectedItem((conex.rs.getString("sigla_unidade")));
            String id_prod = (conex.rs.getString("id_prod"));
            txtipo.setText(conex.rs.getString("tipo_prod"));
            txtipo.requestFocus();
            txtDesc.setText(conex.rs.getString("nome_prod"));
            jLabel_Sistema2.setText(conex.rs.getString("sis_prod"));
//            JOptionPane.showMessageDialog(rootPane, (conex.rs.getString("nome_prod")));
            txtEdicao.setText(conex.rs.getString("edicao_prod"));
//            String ValorBanco=(conex.rs.getString("valor_prod"));
//            ValorBanco=ValorBanco.replace(title, title)
            Double num41 = (conex.rs.getDouble("valor_prod"));
            BigDecimal df1 = new BigDecimal(num41);
            NumberFormat nf1 = NumberFormat.getInstance();// getCurrencyInstance
            nf1.setMinimumFractionDigits(3);
            nf1.setMaximumFractionDigits(3);
            String FormatoValorProd = nf1.format(df1);;
            FormatoValorProd = "R$ " + FormatoValorProd;
            String valor_prod_ex = (conex.rs.getString("valor_prod_ex"));
            txtValor.setText(valor_prod_ex);
            System.out.println("Interface.ProdCadastroJIF.CarregaDadosDaTabela()   - FormatoValorProd " + FormatoValorProd + "  valor_prod_ex " + valor_prod_ex);
            try {
                spNcm.setValue(conex.rs.getInt("ncm_prod"));
            } catch (SQLException ex) {
                spNcm.setValue(0);
            }
            try {
                spCfop.setValue(conex.rs.getInt("cfop_prod"));
            } catch (SQLException ex) {
                spCfop.setValue(0);
            }
            try {
                spEstoqueMinimo.setValue(conex.rs.getFloat("estoque_prod"));
            } catch (SQLException ex) {
                spEstoqueMinimo.setValue(1);
            }
            txtObs.setText(conex.rs.getString("obs_prod"));
            Double num4 = (conex.rs.getDouble("saldo_prod"));
            BigDecimal df = new BigDecimal(num4);
            NumberFormat nf = NumberFormat.getInstance();
            nf.setMinimumFractionDigits(3);
            nf.setMaximumFractionDigits(3);
            String FormatoReal = nf.format(df);
            FormatoReal = FormatoReal.replace(",000", "");
            jLabel_Saldo_Prod2.setText(" Saldo : " + FormatoReal);
            jTextFieldInsereSaldo.setText(FormatoReal);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
            LimpaCampos();
        }
        conex.desconecta();
    }

    public void BuscaUltimaId() {
        conex.conexao();
        conex.executaSql2("select * from produto order by sis_prod  desc ");
        try {
            conex.rs.first();
            NumeroUltimaId = (conex.rs.getInt("sis_prod") + 1);
            UltimaId = String.valueOf(NumeroUltimaId);
            System.out.println("Interface.ProdutoListaJIF.BuscaUltimaId()" + UltimaId);
            jLabel_Sistema2.setText(UltimaId);
        } catch (SQLException ex) {
            Logger.getLogger(ProdutoCadastroJIF.class.getName()).log(Level.SEVERE, null, ex);
            UltimaId = "1";
            jLabel_Sistema2.setText(UltimaId);
        }
        conex.desconecta();
    }

//    public void BuscaIdUnidade() {
//        String nome = (String) jComboBox_Unidade.getSelectedItem();
//        conex3.conexao();
//        conex3.executaSql2("SELECT  sigla_unidade,id_unidade, desc_unidade FROM unidade  where stunid =1 and sigla_unidade='" + nome + "'  order by id_referenciaunidade asc  ");
//        try {
//            conex3.rs.first();
//            un_prod = (conex3.rs.getInt("id_unidade"));
//        } catch (SQLException ex) {
//            Logger.getLogger(ProdutoCadastroJIF.class.getName()).log(Level.SEVERE, null, ex);
//            un_prod = 1;
//            System.out.println("---------------- BuscaIdUnidade----------------" + ex);
//        }
//        conex3.desconecta();
//        System.out.println("---------------- BuscaIdUnidade----------------" + un_prod);
//    }
    public void EscondeInsereSaldoInicio() {
        jTextFieldInsereSaldo.setVisible(false);
        jButtonInsereSaldo.setVisible(false);
        jLabel1.setVisible(false);
        cbUnidade_Int.setVisible(false);
    }

    public void EscondeInsereSaldo() {
        if (jTextFieldInsereSaldo.isVisible()) {
            jTextFieldInsereSaldo.setVisible(false);
            jButtonInsereSaldo.setVisible(false);
            jLabel1.setVisible(false);
        } else {
            jTextFieldInsereSaldo.setVisible(true);
            jButtonInsereSaldo.setVisible(true);
            jLabel1.setVisible(true);
        }

    }

    public void SalvaTemp() {
        if (jLabel_Id_Secundario2.getText() == "novo") {
            BuscaUltimaId();
        } else {

        }
        String MeuValorVerifica = txtValor.getText();
        if (MeuValorVerifica.isEmpty()) {
            txtValor.setText("R$ 0,00");
        }

        String TipoProd = txtipo.getText(),
                DescProd = txtDesc.getText(),
                NumProd = txtEdicao.getText(),
                data_reg = Principal.jLabel_Data.getText(),
                obs_prod = txtObs.getText(),
                cfop_prod = "" + spCfop.getValue(),
                ncm_prod = "" + spNcm.getValue(),
                estoque_prod = "" + spEstoqueMinimo.getValue();
        System.out.println("SalvaTemp() " + data_reg);
        TipoProd = TipoProd.toUpperCase();
        DescProd = DescProd.toUpperCase();
        obs_prod = obs_prod.toUpperCase();
        Bprod.setTipo_prod(TipoProd);
        Bprod.setNome_prod(DescProd);
        Bprod.setEdicao_prod(NumProd);
        Bprod.setCfop_prod(cfop_prod);
        Bprod.setData_reg(data_reg);
        Bprod.setNcm_prod(ncm_prod);
        Bprod.setObs_prod(obs_prod);
        if (estoque_prod.equals(null) | estoque_prod.equals("")) {
            estoque_prod = "1";
//            JOptionPane.showMessageDialog(rootPane, "valor =1");
        } else {
            estoque_prod = estoque_prod.replace(",", ".");
        }
        Bprod.setEstoque_prod(Double.parseDouble(estoque_prod));
        System.out.println("Interface.ProdCadastroJIF.SalvaTemp() ---- " + cbUnidade_Int.getSelectedItem());
        un_prod = Integer.parseInt((String) cbUnidade_Int.getSelectedItem());
        Bprod.setUn_prod(un_prod);
        String MeuValor = txtValor.getText();
        Bprod.setValor_ex(MeuValor);
        MeuValor = MeuValor.replace(",", ".").replace("R$", "");
        Bprod.setValor(Double.parseDouble(MeuValor));

        Bprod.setUsu_prod(Principal.jLabelNomeUsuario.getText());// aqui muda  ///   (Principal.jLabel_Usuario.getText())
        Bprod.setStatus_prod(1); // aqui ativo
        Bprod.setHora_reg(Principal.jLabel_Hora.getText());
        int Sis_prod = 0;
//        if (jLabel_Id_Secundario2.getText() == "novo") {
//            System.out.println("erro ao carregar "+jLabel_Id_Secundario2.getText());
//        } else {
        Sis_prod = Integer.parseInt(jLabel_Sistema2.getText());
//        }

        Bprod.setSis_prod(Sis_prod);
        Dprod.Salvar_Temporario(Bprod);
        if (jLabel_Id_Secundario2.getText() == "novo") {
        } else {
            AlterarTemp();
        }
        txtipo.requestFocus();//// muda foco      /////// Cria_Registro_Primario
    }

    public void AlterarTemp() {
        Bprod.setStatus_prod(2);// alterado
        Bprod.setId_prod(Integer.parseInt(jLabel_Id_Secundario2.getText()));
        Dprod.Alterar_Atualizar_Temporario(Bprod);

    }

    public void BotaoExcluir() {
        int resposta = 0;
        int Status_Prod = 3; // excluido
        resposta = JOptionPane.showConfirmDialog(rootPane, "Deseja realmente excluir ? ");
        if (resposta == JOptionPane.YES_OPTION) {
            String v = jLabel_Id_Secundario2.getText();
            if (v == "novo" | v.equals("novo")) {
                System.out.println("Interface.Produto.CadastroProdutoJIF.BotaoExcluir()");

            } else {
                this.setTitle("Cadastro Produto");
                Bprod.setStatus_prod(Status_Prod);
                Bprod.setUsu_prod(Principal.jLabelNomeUsuario.getText());
                Bprod.setData_reg(Principal.jLabel_Data.getText());
                Bprod.setHora_reg(Principal.jLabel_Hora.getText());
                Bprod.setId_prod(Integer.parseInt(jLabel_Id_Secundario2.getText()));
                Dprod.Excluir_Atualizar_Temporario(Bprod);

                LimpaCampos();
//                this.setVisible(false);
//                this.dispose();
                Principal.jLabelCodigoTela.setText("FechaCadastroProdutoEditar");
                Principal.jButton1.doClick();
                Principal.jLabelCodigoTela.setText("AtualizaProdutoLista");
                Principal.jButton1.doClick();
            }
        }
    }
//
//    public void ManipulaModoValor() {
//        if (IntModoValor == 0) {
//            IntModoValor = 1;
//            txtValor.setBackground(Color.ORANGE);
//        } else {
//            IntModoValor = 0;
//            txtValor.setBackground(Color.white);
//
//        }
//    }

//    public void ManipulaValor() {
//        String MeuValor = txtValor.getText();
//        MeuValor = MeuValor.replace("R$", "").replace(" ", "").replace(".", "").replace(",", ".");
//        if (MeuValor.equals(null) | MeuValor.equals("") | MeuValor == (null) | MeuValor == " ") {
//            System.out.println("Interface.ProdCadastroJIF.ManipulaValor()");
//        } else {
//            if (IntModoValor == 1) {
//                Double num41 = (Double.parseDouble(MeuValor));
//                BigDecimal df1 = new BigDecimal(num41);
//                NumberFormat nf1 = NumberFormat.getInstance();// getCurrencyInstance
//                nf1.setMinimumFractionDigits(4);
//                nf1.setMaximumFractionDigits(4);
//                String FormatoValorProd = nf1.format(df1);
//                FormatoValorProd = "R$ " + FormatoValorProd;
//                txtValor.setText(FormatoValorProd);
//            } else {
//                Double num42 = (Double.parseDouble(MeuValor)); 
//                Double num4 = Double.parseDouble(MeuValor);
//                BigDecimal df = new BigDecimal(num4);
//                NumberFormat nf = NumberFormat.getCurrencyInstance(); 
//                String FormatoReal = nf.format(df);
//                String b = String.valueOf(df);
//                txtValor.setText(FormatoReal); 
//
//                System.out.println("Interface.ProdCadastroJIF.ManipulaValor()" + MeuValor);
//            }
//        }
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    public static javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox<String> cbUnidade;
    private javax.swing.JComboBox<String> cbUnidade_Int;
    private javax.swing.JButton jButtonInsereSaldo;
    private javax.swing.JButton jButtonNovaUnidade;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel_Guia4;
    public static javax.swing.JLabel jLabel_Id_Secundario2;
    private javax.swing.JLabel jLabel_Saldo_Prod2;
    private javax.swing.JLabel jLabel_Sistema2;
    private javax.swing.JLabel jLabel_Valor2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextFieldInsereSaldo;
    private javax.swing.JLabel lblExibeInformacao;
    private javax.swing.JPanel pnBotoes;
    private javax.swing.JPanel pnCampos;
    private javax.swing.JPanel pnPrincipal;
    private javax.swing.JSpinner spCfop;
    private javax.swing.JSpinner spEstoqueMinimo;
    private javax.swing.JSpinner spNcm;
    private javax.swing.JTextField txtDesc;
    private javax.swing.JTextField txtEdicao;
    private javax.swing.JTextArea txtObs;
    private javax.swing.JTextField txtValor;
    private javax.swing.JTextField txtipo;
    // End of variables declaration//GEN-END:variables

    public JButton getBtnCancelar() {
        return btnCancelar;
    }

    public JButton getBtnExcluir() {
        return btnExcluir;
    }

    public JButton getBtnSalvar() {
        return btnSalvar;
    }

    public JComboBox<String> getCbUnidade() {
        return cbUnidade;
    }

    public JComboBox<String> getCbUnidade_Int() {
        return cbUnidade_Int;
    }

    public JSpinner getSpCfop() {
        return spCfop;
    }

    public JSpinner getSpEstoqueMinimo() {
        return spEstoqueMinimo;
    }

    public JSpinner getSpNcm() {
        return spNcm;
    }

    public JTextField getTxtDesc() {
        return txtDesc;
    }

    public JTextField getTxtEdicao() {
        return txtEdicao;
    }

    public JTextArea getTxtObs() {
        return txtObs;
    }

    public JTextField getTxtValor() {
        return txtValor;
    }

    public JTextField getTxtipo() {
        return txtipo;
    }

    public JLabel getLblExibeInformacao() {
        return lblExibeInformacao;
    }

    public void setLblExibeInformacao(JLabel lblExibeInformacao) {
        this.lblExibeInformacao = lblExibeInformacao;
    }

}

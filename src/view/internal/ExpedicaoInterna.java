/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.internal;

//import JDialog_Visao.Movimentacao.JDialog_Movimentacao_Produto;
//import JDialog_Visao.Movimentacao.Outros.JDialog_Expedicao_Saida;
//import JDialog_Visao.Movimentacao.JDialog_Movimentacao_Produto;
//import CaixasDeDialogos.JDialogExpedicaoSaida;
import javax.swing.JTable;
import controller.ExpedicaoInternaController;
import model.NotaFiscal;
import service.NotaFiscalService;
import view.dialog.JDialogExpedicao;

/**
 *
 * @author David
 */
public final class ExpedicaoInterna extends javax.swing.JInternalFrame {

    JDialogExpedicao TelaNotaExSai;

    ExpedicaoInternaController expedicaoInternaController = new ExpedicaoInternaController();

    public ExpedicaoInterna() {
        initComponents();

        expedicaoInternaController.preencheTabela(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jCheckBoxMenuItem_Expedicao = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem_Relatorio = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem_Nota = new javax.swing.JCheckBoxMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jCheckBoxMenuItem_Protocolo_Preto = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem_Protocolo_Branco = new javax.swing.JCheckBoxMenuItem();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Expedição ");
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tabela.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tabelaFocusGained(evt);
            }
        });
        tabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaMouseClicked(evt);
            }
        });
        tabela.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabelaKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tabela);

        jMenu2.setText("Visualizar");

        jCheckBoxMenuItem_Expedicao.setSelected(true);
        jCheckBoxMenuItem_Expedicao.setText("Ver Expedição");
        jCheckBoxMenuItem_Expedicao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem_ExpedicaoActionPerformed(evt);
            }
        });
        jMenu2.add(jCheckBoxMenuItem_Expedicao);

        jCheckBoxMenuItem_Relatorio.setText("Ver Relatório");
        jCheckBoxMenuItem_Relatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem_RelatorioActionPerformed(evt);
            }
        });
        jMenu2.add(jCheckBoxMenuItem_Relatorio);

        jCheckBoxMenuItem_Nota.setText("Ver Nota");
        jCheckBoxMenuItem_Nota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem_NotaActionPerformed(evt);
            }
        });
        jMenu2.add(jCheckBoxMenuItem_Nota);

        jMenu3.setText("Protocolo");

        jCheckBoxMenuItem_Protocolo_Preto.setText("Ver Protocolo Preto");
        jCheckBoxMenuItem_Protocolo_Preto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem_Protocolo_PretoActionPerformed(evt);
            }
        });
        jMenu3.add(jCheckBoxMenuItem_Protocolo_Preto);

        jCheckBoxMenuItem_Protocolo_Branco.setText("Ver Protocolo Branco");
        jCheckBoxMenuItem_Protocolo_Branco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem_Protocolo_BrancoActionPerformed(evt);
            }
        });
        jMenu3.add(jCheckBoxMenuItem_Protocolo_Branco);

        jMenu2.add(jMenu3);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1125, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tabelaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tabelaFocusGained
//        atual = 1;
//        if (atual == 2) {
//            atualizarTabela();
//        } else {
//        }

    }//GEN-LAST:event_tabelaFocusGained


    private void tabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMouseClicked

        if (evt.getClickCount() == 2) {
            int selecao = (int) tabela.getValueAt(tabela.getSelectedRow(), 0);
            abre_Expedicao(selecao);
        }
    }//GEN-LAST:event_tabelaMouseClicked


    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
//        atualizarTabela();
//        controla_ComboBox_tipo();
//        jLabel_Expedicao.setText("Ver Relatorio");
    }//GEN-LAST:event_formFocusGained

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
//        this.setMaximizable(true);
//        try {
//            this.setMaximum(true);
//        } catch (PropertyVetoException ex) {
//            Logger.getLogger(ExpedicaoJIF.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_formInternalFrameOpened


    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing

    }//GEN-LAST:event_formInternalFrameClosing

    private void tabelaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelaKeyPressed
        if (evt.getKeyCode() == evt.VK_ESCAPE) {

            this.dispose();
        }
    }//GEN-LAST:event_tabelaKeyPressed

    private void jCheckBoxMenuItem_ExpedicaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem_ExpedicaoActionPerformed

    }//GEN-LAST:event_jCheckBoxMenuItem_ExpedicaoActionPerformed

    private void jCheckBoxMenuItem_RelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem_RelatorioActionPerformed

    }//GEN-LAST:event_jCheckBoxMenuItem_RelatorioActionPerformed

    private void jCheckBoxMenuItem_NotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem_NotaActionPerformed

    }//GEN-LAST:event_jCheckBoxMenuItem_NotaActionPerformed

    private void jCheckBoxMenuItem_Protocolo_PretoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem_Protocolo_PretoActionPerformed

    }//GEN-LAST:event_jCheckBoxMenuItem_Protocolo_PretoActionPerformed

    private void jCheckBoxMenuItem_Protocolo_BrancoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem_Protocolo_BrancoActionPerformed

    }//GEN-LAST:event_jCheckBoxMenuItem_Protocolo_BrancoActionPerformed

    public void abre_Expedicao(int id) {
        NotaFiscalService notaFiscalService = new NotaFiscalService();
        NotaFiscal notaFiscal = new NotaFiscal();
        notaFiscal = notaFiscalService.obterNotaPorId(id);
        TelaNotaExSai = new JDialogExpedicao(null, rootPaneCheckingEnabled, notaFiscal);
        if (TelaNotaExSai == null) {
            TelaNotaExSai.setVisible(true);
        } else {
            TelaNotaExSai.setVisible(true);
            TelaNotaExSai.setResizable(false);
        }
        expedicaoInternaController.preencheTabela(this);

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem_Expedicao;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem_Nota;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem_Protocolo_Branco;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem_Protocolo_Preto;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem_Relatorio;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables

    public static JTable getTabela() {
        return tabela;
    }

    public static void setTabela(JTable tabela) {
        ExpedicaoInterna.tabela = tabela;
    }

}

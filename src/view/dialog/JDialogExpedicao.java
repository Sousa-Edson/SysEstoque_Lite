/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
// jTextFieldIdNota
package view.dialog;

import Interface.*;
import ModeloBeans.Beans_Nota;
import ConectaBanco.ConexaoBD;
import ModeloDao.Dao_Nota;
import Interface.Principal;
//import Interface.Tela.ExpedicaoJIF;
import java.awt.Color;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author DNA
 */
public class JDialogExpedicao extends javax.swing.JDialog {

    ConexaoBD conex = new ConexaoBD();
    Principal principal;

    Beans_Nota cadNota = new Beans_Nota();
    Dao_Nota daoNota = new Dao_Nota();

    Dao_Nota dao = new Dao_Nota();
    Beans_Nota beans = new Beans_Nota();
    int id_referencia;
    String MinhaData;
    Date data = null;
    String MinhaNatureza;
    SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");

    public JDialogExpedicao(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel_Tipo_Fornecedor = new javax.swing.JLabel();
        jLabel_Fornecedor = new javax.swing.JLabel();
        jLabelData1 = new javax.swing.JLabel();
        jTextFieldIdNota = new javax.swing.JTextField();
        jLabelData = new javax.swing.JLabel();
        jDateChooser_Data_Nota = new com.toedter.calendar.JDateChooser();
        jLabel11 = new javax.swing.JLabel();
        jFormattedTextFieldHora = new javax.swing.JFormattedTextField();
        jComboBoxSituacao = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jComboBoxDocumento = new javax.swing.JComboBox<>();
        jLabelData2 = new javax.swing.JLabel();
        jTextFieldNota = new javax.swing.JTextField();
        jLabelData3 = new javax.swing.JLabel();
        jTextFieldChaveNota = new javax.swing.JTextField();
        jLabelData4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea_Observacao = new javax.swing.JTextArea();
        jButtonEnvAgo = new javax.swing.JButton();
        jButtonEnvHoj = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButtonAlterar = new javax.swing.JButton();
        jLabel_IdNota = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        vol_uf = new javax.swing.JTextField();
        vol_placa = new javax.swing.JTextField();
        vol_motorista = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        vol_quantidade = new javax.swing.JTextField();
        vol_especie = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        vol_peso_bruto = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        vol_numeracao = new javax.swing.JTextField();
        vol_peso_liquido = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Expedição rapida");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel_Tipo_Fornecedor.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel_Tipo_Fornecedor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_Tipo_Fornecedor.setText(" ");
        jLabel_Tipo_Fornecedor.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel_Fornecedor.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel_Fornecedor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_Fornecedor.setText(" ");
        jLabel_Fornecedor.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelData1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabelData1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelData1.setText("OS");

        jTextFieldIdNota.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        jTextFieldIdNota.setEnabled(false);

        jLabelData.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabelData.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelData.setText("DATA EXPEDIÇÃO");

        jDateChooser_Data_Nota.setDateFormatString("dd'/'MM'/'yyyy");
        jDateChooser_Data_Nota.setEnabled(false);
        jDateChooser_Data_Nota.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        jDateChooser_Data_Nota.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                jDateChooser_Data_NotaHierarchyChanged(evt);
            }
        });
        jDateChooser_Data_Nota.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jDateChooser_Data_NotaAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                jDateChooser_Data_NotaAncestorMoved(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jDateChooser_Data_Nota.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jDateChooser_Data_NotaMouseClicked(evt);
            }
        });
        jDateChooser_Data_Nota.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooser_Data_NotaPropertyChange(evt);
            }
        });
        jDateChooser_Data_Nota.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                jDateChooser_Data_NotaVetoableChange(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("HORA");

        try {
            jFormattedTextFieldHora.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextFieldHora.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jFormattedTextFieldHora.setEnabled(false);
        jFormattedTextFieldHora.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        jFormattedTextFieldHora.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jFormattedTextFieldHoraFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFormattedTextFieldHoraFocusLost(evt);
            }
        });
        jFormattedTextFieldHora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextFieldHoraActionPerformed(evt);
            }
        });
        jFormattedTextFieldHora.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFormattedTextFieldHoraKeyPressed(evt);
            }
        });

        jComboBoxSituacao.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        jComboBoxSituacao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1-CALCULADO", "2-PRONTO", "3-AGUARDANDO", "4-ENVIADO", "5-DEVOLVIDO", "6-OUTRO" }));

        jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("SITUAÇÃO");

        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("DOCUMENTO ");

        jComboBoxDocumento.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        jComboBoxDocumento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nota", "Protocolo", "Avulso", "Não definido" }));
        jComboBoxDocumento.setEnabled(false);
        jComboBoxDocumento.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxDocumentoItemStateChanged(evt);
            }
        });

        jLabelData2.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabelData2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelData2.setText("N°:");

        jTextFieldNota.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        jTextFieldNota.setEnabled(false);
        jTextFieldNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNotaActionPerformed(evt);
            }
        });

        jLabelData3.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabelData3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelData3.setText("CHAVE  NOTA");

        jTextFieldChaveNota.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        jTextFieldChaveNota.setEnabled(false);
        jTextFieldChaveNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldChaveNotaActionPerformed(evt);
            }
        });

        jLabelData4.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabelData4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelData4.setText("OBSERVAÇÃO");

        jTextArea_Observacao.setColumns(20);
        jTextArea_Observacao.setRows(5);
        jTextArea_Observacao.setEnabled(false);
        jScrollPane1.setViewportView(jTextArea_Observacao);

        jButtonEnvAgo.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        jButtonEnvAgo.setText("Enviado agora");
        jButtonEnvAgo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEnvAgoActionPerformed(evt);
            }
        });

        jButtonEnvHoj.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        jButtonEnvHoj.setText("Enviado hoje");
        jButtonEnvHoj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEnvHojActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        jButton1.setText("Lançar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButtonAlterar.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        jButtonAlterar.setText("Editar");
        jButtonAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlterarActionPerformed(evt);
            }
        });

        jLabel_IdNota.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel_IdNota.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_IdNota.setText(" ");
        jLabel_IdNota.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Placa Veiculo");

        vol_uf.setEnabled(false);
        vol_uf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                vol_ufFocusLost(evt);
            }
        });

        vol_placa.setEnabled(false);
        vol_placa.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                vol_placaFocusLost(evt);
            }
        });
        vol_placa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                vol_placaKeyReleased(evt);
            }
        });

        vol_motorista.setEnabled(false);
        vol_motorista.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                vol_motoristaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                vol_motoristaFocusLost(evt);
            }
        });

        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setText("Motorista :");

        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("UF");

        vol_quantidade.setEnabled(false);

        vol_especie.setEnabled(false);
        vol_especie.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                vol_especieFocusLost(evt);
            }
        });

        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setText("Espécie");

        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("Peso Bruto");

        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("Numeração");

        vol_peso_bruto.setEnabled(false);

        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel30.setText("Peso Liquido");

        vol_numeracao.setEnabled(false);
        vol_numeracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vol_numeracaoActionPerformed(evt);
            }
        });

        vol_peso_liquido.setEnabled(false);

        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Quantidade");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel_Tipo_Fornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_IdNota, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_Fornecedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextFieldIdNota)
                                .addComponent(jLabelData1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jDateChooser_Data_Nota, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabelData, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jFormattedTextFieldHora, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jComboBoxSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addComponent(jComboBoxDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabelData2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextFieldNota)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jButtonEnvAgo)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButtonEnvHoj)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButtonAlterar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton1))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(vol_motorista, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(vol_placa, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(vol_uf, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelData3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldChaveNota))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                            .addComponent(vol_quantidade, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(vol_especie, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(vol_numeracao, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(vol_peso_bruto)
                            .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(vol_peso_liquido, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabelData4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton1, jButtonAlterar, jButtonEnvAgo, jButtonEnvHoj});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_Tipo_Fornecedor)
                    .addComponent(jLabel_Fornecedor)
                    .addComponent(jLabel_IdNota))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelData1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextFieldIdNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelData)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jDateChooser_Data_Nota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedTextFieldHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelData2)
                    .addComponent(jTextFieldNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelData3)
                    .addComponent(jTextFieldChaveNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelData4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(vol_peso_bruto)
                            .addComponent(vol_peso_liquido)
                            .addComponent(vol_numeracao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(vol_especie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(vol_quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel27))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel19)
                        .addComponent(jLabel21))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(vol_motorista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(vol_placa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(vol_uf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonEnvAgo)
                    .addComponent(jButtonEnvHoj)
                    .addComponent(jButtonAlterar)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel11, jLabel12, jLabelData, jLabelData1});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jComboBoxSituacao, jDateChooser_Data_Nota, jFormattedTextFieldHora, jTextFieldIdNota});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jDateChooser_Data_NotaHierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jDateChooser_Data_NotaHierarchyChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jDateChooser_Data_NotaHierarchyChanged

    private void jDateChooser_Data_NotaAncestorMoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jDateChooser_Data_NotaAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jDateChooser_Data_NotaAncestorMoved

    private void jDateChooser_Data_NotaAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jDateChooser_Data_NotaAncestorAdded
        //  jFormattedTextFieldHora.requestFocus();
    }//GEN-LAST:event_jDateChooser_Data_NotaAncestorAdded

    private void jDateChooser_Data_NotaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jDateChooser_Data_NotaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jDateChooser_Data_NotaMouseClicked

    private void jDateChooser_Data_NotaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooser_Data_NotaPropertyChange
        //  jFormattedTextFieldHora.requestFocus();
    }//GEN-LAST:event_jDateChooser_Data_NotaPropertyChange

    private void jDateChooser_Data_NotaVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_jDateChooser_Data_NotaVetoableChange

    }//GEN-LAST:event_jDateChooser_Data_NotaVetoableChange

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        lancarNota();
//        ExpedicaoJIF.jButton1.requestFocus();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jFormattedTextFieldHoraFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextFieldHoraFocusGained
//        flaghora = 1;
    }//GEN-LAST:event_jFormattedTextFieldHoraFocusGained

    private void jFormattedTextFieldHoraFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextFieldHoraFocusLost
        // if (flaghora == 1) {
        if (jFormattedTextFieldHora.getText().equals("  :  ")) {
            jFormattedTextFieldHora.setBackground(Color.RED);
        } else {
            jFormattedTextFieldHora.setBackground(Color.WHITE);
        }
//        } else {
//            jFormattedTextFieldHora.setBackground(Color.WHITE);
//        }
    }//GEN-LAST:event_jFormattedTextFieldHoraFocusLost

    private void jFormattedTextFieldHoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextFieldHoraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextFieldHoraActionPerformed

    private void jFormattedTextFieldHoraKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextFieldHoraKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            //   jTextFieldNota.requestFocus();
        }
    }//GEN-LAST:event_jFormattedTextFieldHoraKeyPressed

    private void jButtonEnvAgoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEnvAgoActionPerformed

        String hora = principal.jLabel_Hora.getText();
        String dataPrincipal = principal.jLabel_Data.getText();
        jComboBoxSituacao.setSelectedItem("4-ENVIADO");
        jFormattedTextFieldHora.setText(hora);
        //data// insere data no jDateChose a partir de uma String no banco 
        // String insereData = (conex.rs.getString("nota_data"));
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        Date data;
        try {
            data = formato.parse(dataPrincipal);
            jDateChooser_Data_Nota.setDate(data);
        } catch (ParseException ex) {
            Logger.getLogger(JDialogExpedicao.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jButtonEnvAgoActionPerformed

    private void jTextFieldNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNotaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNotaActionPerformed

    private void jTextFieldChaveNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldChaveNotaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldChaveNotaActionPerformed

    private void jButtonEnvHojActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEnvHojActionPerformed
        jComboBoxSituacao.setSelectedItem("4-ENVIADO");
        String dataPrincipal = principal.jLabel_Data.getText();
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        Date data;
        try {
            data = formato.parse(dataPrincipal);
            jDateChooser_Data_Nota.setDate(data);
        } catch (ParseException ex) {
            Logger.getLogger(JDialogExpedicao.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonEnvHojActionPerformed

    private void jButtonAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAlterarActionPerformed

        if (jTextFieldNota.getText().isEmpty()) {

            jTextFieldNota.setBackground(null);
        } else {
            jTextFieldNota.setBackground(Color.yellow);
        }
        if (jDateChooser_Data_Nota.isEnabled() == true) {
            bloqueiaCampos();
        } else {
            liberaCampos();
        }

    }//GEN-LAST:event_jButtonAlterarActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
//        if (jTextFieldIdNota.getText().isEmpty()) {
//        } else {
        iniciaFormualario();
//        }

    }//GEN-LAST:event_formWindowOpened

    private void jComboBoxDocumentoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxDocumentoItemStateChanged
//        jLabelDocumento.setText((String) jComboBoxDocumento.getSelectedItem());
        String label = (String) jComboBoxDocumento.getSelectedItem();
        jTextFieldNota.setText("");
        jTextFieldChaveNota.setText("");

        String nome = "Não definido";
        String nomeNota = jTextFieldNota.getText();
        if (label == "Não definido") {
            jDateChooser_Data_Nota.requestFocus();
            jTextFieldNota.setText(nome);
            jTextFieldChaveNota.setText(nome);
            jTextFieldChaveNota.setEnabled(false);
            jTextFieldNota.setBackground(Color.WHITE);
            jTextFieldNota.setEnabled(false);

        } else if (label == "Nota") {
            //  jLabelDocumento.setText("No " + jLabelDocumento.getText());
            jTextFieldNota.setEnabled(true);
            jTextFieldNota.requestFocus();
            jTextFieldChaveNota.setEnabled(true);

        } else if (label == "Protocolo") {

            jTextFieldNota.setEnabled(true);
            jTextFieldNota.requestFocus();
            jTextFieldNota.setText(jTextFieldIdNota.getText());

        } else {
            //  jTextFieldChaveNota.setText(jLabelDocumento.getText() + " " + nomeNota);
            jTextFieldNota.setEnabled(true);
            jTextFieldNota.setBackground(Color.WHITE);
            jTextFieldNota.requestFocus();
            jTextFieldChaveNota.setEnabled(false);

        }
    }//GEN-LAST:event_jComboBoxDocumentoItemStateChanged

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
//        ExpedicaoJIF.jButton1.doClick();
    }//GEN-LAST:event_formWindowClosing

    private void vol_ufFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_vol_ufFocusLost
        AjustaMinhaUf();
        vol_uf.setText(vol_uf.getText().toUpperCase());
    }//GEN-LAST:event_vol_ufFocusLost

    private void vol_placaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_vol_placaFocusLost
        //aqui
        AjustaMinhaPlaca();
        vol_placa.setText(vol_placa.getText().toUpperCase());
    }//GEN-LAST:event_vol_placaFocusLost

    private void vol_placaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_vol_placaKeyReleased
        AjustaMinhaPlaca();
    }//GEN-LAST:event_vol_placaKeyReleased

    private void vol_motoristaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_vol_motoristaFocusGained
        //        vol_motorista.setBackground(Color.cyan);
    }//GEN-LAST:event_vol_motoristaFocusGained

    private void vol_motoristaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_vol_motoristaFocusLost
        vol_motorista.setText(vol_motorista.getText().toUpperCase());
        vol_motorista.setBackground(Color.WHITE);
    }//GEN-LAST:event_vol_motoristaFocusLost

    private void vol_especieFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_vol_especieFocusLost
        vol_especie.setText(vol_especie.getText().toUpperCase());
    }//GEN-LAST:event_vol_especieFocusLost

    private void vol_numeracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vol_numeracaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vol_numeracaoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogExpedicao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogExpedicao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogExpedicao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogExpedicao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialogExpedicao dialog = new JDialogExpedicao(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    public void lancarNota() {
        String Teste;
        Date jDate = new Date();
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        jDate = jDateChooser_Data_Nota.getDate();
        if (jDate == null) {
            Teste = "";
            System.out.println(" if (jDate == null) {");
        } else {
            Teste = (formato.format(jDate));
            System.out.println(" } else {Teste = (formato.format(jDate));");
        }
        LancaExpedicaoUpdate();
        LancaExpedicaoInsert();
        Principal.jLabelCodigoTela.setText("Expedicao");
        Principal.jButton1.doClick();
       Principal.jLabelCodigoTela.setText("AtualizaTudo");
      Principal.jButton1.doClick();
        this.dispose();
    }

//    public void SalvarMovimentoBanco() {
//        MovimentoBancoUpdateTodos();
//        MovimentoBancoInsert();
//    }
    public void LancaExpedicaoInsert() {
        String Documento = ((String) jComboBoxDocumento.getSelectedItem());
        String Nota = jTextFieldNota.getText();
        String Hora = (jFormattedTextFieldHora.getText());
        String MenuMinhaData = "";
        if (jDateChooser_Data_Nota.getDate() == (null)) {
            MinhaData = ("");
        } else {
            data = jDateChooser_Data_Nota.getDate();
            MinhaData = (formato.format(data));
            SimpleDateFormat formato2 = new SimpleDateFormat("yyyy/MM/dd");
            MenuMinhaData = (formato2.format(data));
        }
        String Data = MinhaData;
        String Situacao = ((String) jComboBoxSituacao.getSelectedItem());
        String Chave = (jTextFieldChaveNota.getText());
        jTextArea_Observacao.setText(jTextArea_Observacao.getText().toUpperCase());
        String Observacao = (jTextArea_Observacao.getText());
        String Registro = principal.jLabel_Data.getText() + " " + principal.jLabel_Hora.getText();
        String Usuario = (principal.jLabelNomeUsuario.getText());
//        String busca = String.valueOf(id_referencia);
        String busca = jLabel_IdNota.getText();
        
       String motorista = vol_motorista.getText();
            String placa=vol_placa.getText();
        String pesoliquido=(vol_peso_liquido.getText());
       String pesobruto=(vol_peso_bruto.getText());
        String uf=(vol_uf.getText());
        String especie=(vol_especie.getText());
        String numeracao=(vol_numeracao.getText());
        String quantidade=(vol_quantidade.getText());
        
        conex.conexao();
        try {
            java.sql.PreparedStatement pst = conex.con.prepareStatement(""
                    + "INSERT INTO nota(\n"
                    + "             nota_documento, nota_nota, nota_data, nota_hora, nota_observacao, \n"
                    + "            nota_registro, nota_situacao, nota_chave, nota_total, nota_operacao, \n"
                    + "            nota_usu, id_referencianota, stnota, naturezaint, fornecedorint, \n"
                    + "            modalidade, transportadora, motorista, placa, uf, quantidade, \n"
                    + "            especie, numeracao, pesobruto, pesoliquido, motoristaint, empresaint, \n"
                    + "            datavariavel)"
                    + "SELECT  '" + Documento + "', '" + Nota + "', '" + Data + "', '" + Hora + "', '" + Observacao + "', \n"
                    + "       '" + Registro + "', '" + Situacao + "', '" + Chave + "', nota_total, nota_operacao, \n"
                    + "       '" + Usuario + "', id_referencianota, '1', naturezaint, fornecedorint, \n"
                    + "       modalidade, transportadora,  '" +motorista+ "','" + placa+ "','" + uf+ "', '" +quantidade+ "', \n"
                    + "       '" +especie+ "', '" +numeracao+ "','" + pesobruto+ "','" + pesoliquido+ "', motoristaint, empresaint, \n"
                    + "       '" + MenuMinhaData + "'\n"
                    + "  FROM nota where id_nota =   '" + busca + "'  "
                    + "                   ");
            pst.execute();
//            JOptionPane.showMessageDialog(rootPane, " MovimentoBancoUpdateTodos "+id_referencia);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao MovimentoBancoInsert() . \\n" + ex);
        }
        conex.desconecta();
    }

    public void LancaExpedicaoUpdate() {
//        String busca = String.valueOf(id_referencia);
        String busca = jTextFieldIdNota.getText();

        conex.conexao();
        try {
            java.sql.PreparedStatement pst = conex.con.prepareStatement("UPDATE nota\n"
                    + "   SET stnota='2'\n"
                    + " WHERE stnota='1' and id_referencianota='" + busca + "'");
            pst.execute();
            // JOptionPane.showMessageDialog(rootPane, " MovimentoBancoUpdateTodos "+busca);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao MovimentoBancoUpdateTodos() . \\n" + ex);
        }
        conex.desconecta();
    }

    public void MovimentoBancoUpdate() {
        int busca = id_referencia;
        conex.conexao();
        try {
            java.sql.PreparedStatement pst = conex.con.prepareStatement(" INSERT INTO movprodutobase  (\n"
                    + "             id_prod_ent, data_mov, nota_mov, sistema_mov, qtd_mov, \n"
                    + "            qtd_prod, qtd_prod_ex, qtd_calc, qtd_calc_ex, valor_real, valor_moeda, \n"
                    + "            destino_mov, complemento_mov, registro_mov, status_mov, volume, \n"
                    + "            usuario_mov, modo_mov, total_mov)\n"
                    + "    SELECT  id_prod_ent, data_mov, nota_mov, sistema_mov, qtd_mov, \n"
                    + "       qtd_prod, qtd_prod_ex, qtd_calc, qtd_calc_ex, valor_real, valor_moeda, \n"
                    + "       destino_mov, complemento_mov, registro_mov, status_mov, volume, \n"
                    + "       usuario_mov, modo_mov, total_mov\n"
                    + "  FROM movproduto"
                    + " WHERE  nota_mov='" + busca + "'");//// status_mov='ATIVO' and

            pst.execute();
//            JOptionPane.showMessageDialog(null, "Excuido");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao MovimentoBancoInsert() . \\n" + ex);
        }
        conex.desconecta();
    }

//    public void InsereDadosNota() {
//        if (jDateChooser_Data_Nota.getDate() == (null)) {
//            MinhaData = ("");
//        } else {
//            data = jDateChooser_Data_Nota.getDate();
//            MinhaData = (formato.format(data));
//        }
//        beans.setId_referencia(id_referencia);
//        beans.setNota_operacao(MinhaNatureza);
//        beans.setNota_registro(principal.jLabel_Data.getText() + " " + principal.jLabel_Hora.getText());
//        beans.setNota_status("ATIVO");
//        beans.setNota_total("1234"); // ver total
//        beans.setNota_usuario(MenuPrincipal.jLabel_Usuario.getText());
//        beans.setNota_data(MinhaData);
//        beans.setNatureza(MinhaNatureza);
//        beans.setNota_documento((String) jComboBoxDocumento.getSelectedItem());
//        beans.setNota_fornecedor(jLabel_Fornecedor.getText());
//        beans.setNota_situacao((String) jComboBoxSituacao.getSelectedItem());
//        beans.setNota_chave(jTextFieldChaveNota.getText());
//        beans.setNota_nota(jTextFieldNota.getText());
//        beans.setNota_hora(jFormattedTextFieldHora.getText());
//        jTextArea_Observacao
//                .setText(jTextArea_Observacao.getText().toUpperCase());
//        beans.setNota_observacao(jTextArea_Observacao.getText());
//    }
    public void liberaCampos() {
        jDateChooser_Data_Nota.setEnabled(true);
        jFormattedTextFieldHora.setEnabled(true);
        jComboBoxSituacao.setEnabled(true);
        jTextFieldNota.setEnabled(true);
        jTextFieldChaveNota.setEnabled(true);
        jTextArea_Observacao.setEnabled(true);
        jComboBoxDocumento.setEnabled(true);
         vol_quantidade.setEnabled(true);
            vol_especie.setEnabled(true);
            vol_numeracao.setEnabled(true);
            vol_peso_bruto.setEnabled(true);
            vol_peso_liquido.setEnabled(true);
            vol_motorista.setEnabled(true);
            vol_placa.setEnabled(true);
            vol_uf.setEnabled(true);
    }

    public void bloqueiaCampos() {
        jDateChooser_Data_Nota.setEnabled(false);
        jFormattedTextFieldHora.setEnabled(false);
        jComboBoxSituacao.setEnabled(false);
        jTextFieldNota.setEnabled(false);
        jTextFieldChaveNota.setEnabled(false);
        jTextArea_Observacao.setEnabled(false);
        jComboBoxDocumento.setEnabled(false);
                vol_quantidade.setEnabled(false);
            vol_especie.setEnabled(false);
            vol_numeracao.setEnabled(false);
            vol_peso_bruto.setEnabled(false);
            vol_peso_liquido.setEnabled(false);
            vol_motorista.setEnabled(false);
            vol_placa.setEnabled(false);
            vol_uf.setEnabled(false);
    }

    public void RIdSai(String id) {
        jTextFieldIdNota.setText(id);
        jTextFieldIdNota.requestFocus();
    }

    public void MinhaIdNotaSai(String idnota) {
        jLabel_IdNota.setText(idnota);

    }

    public void iniciaFormualario() {
        String busca = jLabel_IdNota.getText();
        System.out.println("busca = " + busca);
        conex.conexao();
        conex.executaSql(""
                + "SELECT id_nota, nota_documento, nota_nota, nota_data, nota_hora, nota_observacao, \n"
                + "       nota_registro, nota_situacao, nota_chave, nota_total, nota_operacao, \n"
                + "       nota_usu, id_referencianota, stnota, naturezaint, fornecedorint, \n"
                + "       modalidade, transportadora, motorista, placa, uf, quantidade, \n"
                + "       especie, numeracao, pesobruto, pesoliquido, motoristaint, empresaint, \n"
                + "       datavariavel\n"
                + "  FROM nota "
                + "  where stnota=1  and id_nota= '" + busca + "' order by datavariavel asc"
                + "               ");

        try {
            conex.rs.first();
            jComboBoxSituacao.setSelectedItem(String.valueOf(conex.rs.getString("nota_situacao")));
            jComboBoxDocumento.setSelectedItem(String.valueOf(conex.rs.getString("nota_documento")));
            String MinhaHora = (String.valueOf(conex.rs.getString("nota_hora")));
            if (MinhaHora.equals("") | MinhaHora.equals("  :  ") | MinhaHora == " " | MinhaHora.isEmpty()) {
                jFormattedTextFieldHora.setText(null);
            } else {
                jFormattedTextFieldHora.setText(MinhaHora);
            }
            jTextFieldNota.setText(String.valueOf(conex.rs.getString("nota_nota")));
            jTextFieldChaveNota.setText(String.valueOf(conex.rs.getString("nota_chave")));
            jTextArea_Observacao.setText(String.valueOf(conex.rs.getString("nota_observacao")));
////data// insere data no jDateChose a partir de uma String no banco 
            String insereData = (conex.rs.getString("nota_data"));
            vol_quantidade.setText(conex.rs.getString("quantidade"));
            vol_especie.setText(conex.rs.getString("especie"));
            vol_numeracao.setText(conex.rs.getString("numeracao"));
            vol_peso_bruto.setText(conex.rs.getString("pesobruto"));
            vol_peso_liquido.setText((conex.rs.getString("pesoliquido")));
            vol_motorista.setText(conex.rs.getString("motorista"));
            vol_placa.setText(conex.rs.getString("placa"));
            vol_uf.setText(conex.rs.getString("uf"));
            try {
                data = formato.parse(insereData);
            } catch (ParseException exd) {
                System.out.println("erro data " + exd);
            }
            jDateChooser_Data_Nota.setDate(data);
        } catch (SQLException ex) {
            System.out.println("Interface.JDialogExpedicaoSaida.iniciaFormualario()   = " + ex);

        }
        conex.desconecta();

    }

    public void AjustaMinhaUf() {
        String s = vol_uf.getText().replace(".", "").replace("-", "");
        String formatadoA, formatadoC;
        formatadoA = s.substring(0, 2);
        System.out.println("formatadoA     " + formatadoA);
        if (formatadoA.matches("^[a-zA-ZÁÂÃÀÇÉÊÍÓÔÕÚÜáâãàçéêíóôõúü]*$")) {
            formatadoC = formatadoA;
        } else {
            System.out.println("if uf   erase ");
            formatadoC = "";
            vol_uf.requestFocus();
        }
        System.err.println("    uf   " + formatadoC);
        vol_uf.setText(formatadoC);
    }

    public void AjustaMinhaPlaca() {

        String s = vol_placa.getText().replace(".", "").replace("-", "");
        String formatadoA, formatadoB, formatadoC;
        int contar = s.length();
        if (contar <= 4) {
        } else {
            formatadoA = s.substring(0, 3);
            System.out.println("formatadoA     " + formatadoA);
            formatadoB = s.substring(3, 7);
            System.out.println("formatadoB     " + formatadoB);
            if (formatadoA.matches("^[a-zA-ZÁÂÃÀÇÉÊÍÓÔÕÚÜáâãàçéêíóôõúü]*$")) {
                formatadoA = formatadoA;
            } else {
                formatadoA = "erro A";
            }
            if (formatadoB.matches("^[0-9]*$")) {
                formatadoB = formatadoB;
            } else {
                formatadoB = "erro B";
            }
            if (formatadoB == "erro B" | formatadoA == "erro A") {
                System.out.println("if    erase ");
                formatadoC = "";
                vol_placa.requestFocus();
            } else {
                formatadoC = formatadoA + "-" + formatadoB;
            }
            System.err.println("    placa   " + formatadoC);
            vol_placa.setText(formatadoC);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonAlterar;
    private javax.swing.JButton jButtonEnvAgo;
    private javax.swing.JButton jButtonEnvHoj;
    private javax.swing.JComboBox<String> jComboBoxDocumento;
    private javax.swing.JComboBox<String> jComboBoxSituacao;
    private com.toedter.calendar.JDateChooser jDateChooser_Data_Nota;
    private javax.swing.JFormattedTextField jFormattedTextFieldHora;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabelData;
    private javax.swing.JLabel jLabelData1;
    private javax.swing.JLabel jLabelData2;
    private javax.swing.JLabel jLabelData3;
    private javax.swing.JLabel jLabelData4;
    private javax.swing.JLabel jLabel_Fornecedor;
    private javax.swing.JLabel jLabel_IdNota;
    private javax.swing.JLabel jLabel_Tipo_Fornecedor;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea_Observacao;
    private javax.swing.JTextField jTextFieldChaveNota;
    public static javax.swing.JTextField jTextFieldIdNota;
    private javax.swing.JTextField jTextFieldNota;
    private javax.swing.JTextField vol_especie;
    private javax.swing.JTextField vol_motorista;
    private javax.swing.JTextField vol_numeracao;
    private javax.swing.JTextField vol_peso_bruto;
    private javax.swing.JTextField vol_peso_liquido;
    private javax.swing.JTextField vol_placa;
    private javax.swing.JTextField vol_quantidade;
    private javax.swing.JTextField vol_uf;
    // End of variables declaration//GEN-END:variables
}
